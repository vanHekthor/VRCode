<color=#89DDFF>package</color> <color=#FFCB6B>main.java.components.hash.algorithms</color><color=#89DDFF>;</color>

<color=#89DDFF>import</color> <color=#FFCB6B>java.util.Arrays</color><color=#89DDFF>;</color>

<color=#89DDFF>import</color> <color=#FFCB6B>main.java.Helper</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>main.java.components.hash.HashInterface</color><color=#89DDFF>;</color>

<color=#BB80B3>public</color> <color=#BB80B3>class</color> <color=#FFCB6B>Argon2CF</color> <color=#BB80B3>implements</color> <color=#EEFFFF>HashInterface</color> <color=#89DDFF>{</color>

    <color=#EEFFFF>Helper</color> <color=#EEFFFF>helper</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>Helper</color><color=#89DDFF>();</color>

    <color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>name</color> <color=#89DDFF>=</color> <color=#C3E88D>"Argon2 hash function."</color><color=#89DDFF>;</color>
    <color=#BB80B3>private</color> <color=#BB80B3>int</color> <color=#EEFFFF>anzByte</color> <color=#89DDFF>=</color> <color=#F78C6C>1024</color><color=#89DDFF>;</color>
    <color=#546E7A>// use GL if 1 else use GB</color>
    <color=#BB80B3>private</color> <color=#BB80B3>boolean</color> <color=#EEFFFF>_useGL</color><color=#89DDFF>;</color>

    <color=#BB80B3>private</color> <color=#BB80B3>long</color><color=#89DDFF>[]</color> <color=#EEFFFF>_v</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#BB80B3>long</color><color=#89DDFF>[</color><color=#F78C6C>128</color><color=#89DDFF>];</color>

    <color=#BB80B3>private</color> <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>_z</color><color=#89DDFF>;</color>

    <color=#BB80B3>public</color> <color=#82AAFF>Argon2CF</color><color=#89DDFF>(</color><color=#BB80B3>boolean</color> <color=#EEFFFF>useGL</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>_useGL</color> <color=#89DDFF>=</color> <color=#EEFFFF>useGL</color><color=#89DDFF>;</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>update</color><color=#89DDFF>(</color><color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>message</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>

        <color=#BB80B3>if</color> <color=#89DDFF>(</color><color=#EEFFFF>message</color><color=#89DDFF>.</color><color=#BB80B3>length</color> <color=#89DDFF>!=</color> <color=#F78C6C>2048</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#BB80B3>return</color><color=#89DDFF>;</color>
        <color=#89DDFF>}</color>

        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>x</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#BB80B3>byte</color><color=#89DDFF>[</color><color=#EEFFFF>anzByte</color><color=#89DDFF>];</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>y</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#BB80B3>byte</color><color=#89DDFF>[</color><color=#EEFFFF>anzByte</color><color=#89DDFF>];</color>

        <color=#EEFFFF>System</color><color=#89DDFF>.</color><color=#BB80B3>arraycopy</color><color=#89DDFF>(</color><color=#EEFFFF>message</color><color=#89DDFF>,</color> <color=#F78C6C>0</color><color=#89DDFF>,</color> <color=#EEFFFF>x</color><color=#89DDFF>,</color> <color=#F78C6C>0</color><color=#89DDFF>,</color> <color=#EEFFFF>anzByte</color><color=#89DDFF>);</color>
        <color=#EEFFFF>System</color><color=#89DDFF>.</color><color=#BB80B3>arraycopy</color><color=#89DDFF>(</color><color=#EEFFFF>message</color><color=#89DDFF>,</color> <color=#F78C6C>1024</color><color=#89DDFF>,</color> <color=#EEFFFF>y</color><color=#89DDFF>,</color> <color=#F78C6C>0</color><color=#89DDFF>,</color> <color=#EEFFFF>anzByte</color><color=#89DDFF>);</color>

        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>R</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>xor</color><color=#89DDFF>(</color><color=#EEFFFF>x</color><color=#89DDFF>,</color> <color=#EEFFFF>y</color><color=#89DDFF>);</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>Q</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#BB80B3>byte</color><color=#89DDFF>[</color><color=#EEFFFF>R</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>];</color>

        <color=#546E7A>// updating rows</color>
        <color=#EEFFFF>pWrapper</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>R</color><color=#89DDFF>,</color> <color=#F78C6C>0</color><color=#89DDFF>,</color> <color=#F78C6C>128</color><color=#89DDFF>),</color> <color=#F78C6C>0</color><color=#89DDFF>);</color>
        <color=#EEFFFF>pWrapper</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>R</color><color=#89DDFF>,</color> <color=#F78C6C>128</color><color=#89DDFF>,</color> <color=#F78C6C>256</color><color=#89DDFF>),</color> <color=#F78C6C>1</color><color=#89DDFF>);</color>
        <color=#EEFFFF>pWrapper</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>R</color><color=#89DDFF>,</color> <color=#F78C6C>256</color><color=#89DDFF>,</color> <color=#F78C6C>384</color><color=#89DDFF>),</color> <color=#F78C6C>2</color><color=#89DDFF>);</color>
        <color=#EEFFFF>pWrapper</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>R</color><color=#89DDFF>,</color> <color=#F78C6C>384</color><color=#89DDFF>,</color> <color=#F78C6C>512</color><color=#89DDFF>),</color> <color=#F78C6C>3</color><color=#89DDFF>);</color>
        <color=#EEFFFF>pWrapper</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>R</color><color=#89DDFF>,</color> <color=#F78C6C>512</color><color=#89DDFF>,</color> <color=#F78C6C>640</color><color=#89DDFF>),</color> <color=#F78C6C>4</color><color=#89DDFF>);</color>
        <color=#EEFFFF>pWrapper</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>R</color><color=#89DDFF>,</color> <color=#F78C6C>640</color><color=#89DDFF>,</color> <color=#F78C6C>768</color><color=#89DDFF>),</color> <color=#F78C6C>5</color><color=#89DDFF>);</color>
        <color=#EEFFFF>pWrapper</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>R</color><color=#89DDFF>,</color> <color=#F78C6C>768</color><color=#89DDFF>,</color> <color=#F78C6C>896</color><color=#89DDFF>),</color> <color=#F78C6C>6</color><color=#89DDFF>);</color>
        <color=#EEFFFF>pWrapper</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>R</color><color=#89DDFF>,</color> <color=#F78C6C>896</color><color=#89DDFF>,</color> <color=#F78C6C>1024</color><color=#89DDFF>),</color> <color=#F78C6C>7</color><color=#89DDFF>);</color>

        <color=#546E7A>//// inverting elements of array _v</color>
        <color=#546E7A>// for (int i = 0; i < _v.length; ++i) {</color>
        <color=#546E7A>// byte[] tmp = long2bytes(_v[i]);</color>
        <color=#546E7A>//</color>
        <color=#546E7A>// for (int k = 0; k < tmp.length / 2; k++) {</color>
        <color=#546E7A>// byte temp = tmp[k];</color>
        <color=#546E7A>// tmp[k] = tmp[tmp.length - (1 + k)];</color>
        <color=#546E7A>// tmp[tmp.length - (1 + k)] = temp;</color>
        <color=#546E7A>// }</color>
        <color=#546E7A>// _v[i] = bytes2long(tmp, 0);</color>
        <color=#546E7A>// }</color>

        <color=#546E7A>// updating columns</color>
        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><=</color> <color=#F78C6C>7</color><color=#89DDFF>;</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#BB80B3>int</color> <color=#EEFFFF>i0</color> <color=#89DDFF>=</color> <color=#EEFFFF>i</color> <color=#89DDFF>*</color> <color=#F78C6C>2</color><color=#89DDFF>;</color>
            <color=#BB80B3>int</color> <color=#EEFFFF>i1</color> <color=#89DDFF>=</color> <color=#EEFFFF>i0</color> <color=#89DDFF>+</color> <color=#F78C6C>16</color><color=#89DDFF>;</color>
            <color=#BB80B3>int</color> <color=#EEFFFF>i2</color> <color=#89DDFF>=</color> <color=#EEFFFF>i1</color> <color=#89DDFF>+</color> <color=#F78C6C>16</color><color=#89DDFF>;</color>
            <color=#BB80B3>int</color> <color=#EEFFFF>i3</color> <color=#89DDFF>=</color> <color=#EEFFFF>i2</color> <color=#89DDFF>+</color> <color=#F78C6C>16</color><color=#89DDFF>;</color>
            <color=#BB80B3>int</color> <color=#EEFFFF>i4</color> <color=#89DDFF>=</color> <color=#EEFFFF>i3</color> <color=#89DDFF>+</color> <color=#F78C6C>16</color><color=#89DDFF>;</color>
            <color=#BB80B3>int</color> <color=#EEFFFF>i5</color> <color=#89DDFF>=</color> <color=#EEFFFF>i4</color> <color=#89DDFF>+</color> <color=#F78C6C>16</color><color=#89DDFF>;</color>
            <color=#BB80B3>int</color> <color=#EEFFFF>i6</color> <color=#89DDFF>=</color> <color=#EEFFFF>i5</color> <color=#89DDFF>+</color> <color=#F78C6C>16</color><color=#89DDFF>;</color>
            <color=#BB80B3>int</color> <color=#EEFFFF>i7</color> <color=#89DDFF>=</color> <color=#EEFFFF>i6</color> <color=#89DDFF>+</color> <color=#F78C6C>16</color><color=#89DDFF>;</color>

            <color=#EEFFFF>p</color><color=#89DDFF>(</color><color=#EEFFFF>i0</color><color=#89DDFF>,</color> <color=#EEFFFF>i1</color><color=#89DDFF>,</color> <color=#EEFFFF>i2</color><color=#89DDFF>,</color> <color=#EEFFFF>i3</color><color=#89DDFF>,</color> <color=#EEFFFF>i4</color><color=#89DDFF>,</color> <color=#EEFFFF>i5</color><color=#89DDFF>,</color> <color=#EEFFFF>i6</color><color=#89DDFF>,</color> <color=#EEFFFF>i7</color><color=#89DDFF>);</color>
        <color=#89DDFF>}</color>

        <color=#546E7A>// inverting elements of array _v</color>
        <color=#546E7A>// for (int i = 0; i<_v.length; ++i){</color>
        <color=#546E7A>// byte[] tmp = long2bytes(_v[i]);</color>
        <color=#546E7A>//</color>
        <color=#546E7A>// for (int k = 0; k < tmp.length/2; k++) {</color>
        <color=#546E7A>// byte temp = tmp[k];</color>
        <color=#546E7A>// tmp[k] = tmp[tmp.length-(1+k)];</color>
        <color=#546E7A>// tmp[tmp.length-(1+k)] = temp;</color>
        <color=#546E7A>// }</color>
        <color=#546E7A>// _v[i] = bytes2long(tmp, 0);</color>
        <color=#546E7A>// }</color>

        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><</color> <color=#EEFFFF>_v</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>;</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>tmp</color> <color=#89DDFF>=</color> <color=#EEFFFF>long2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>i</color><color=#89DDFF>]);</color>
            <color=#EEFFFF>System</color><color=#89DDFF>.</color><color=#BB80B3>arraycopy</color><color=#89DDFF>(</color><color=#EEFFFF>tmp</color><color=#89DDFF>,</color> <color=#F78C6C>0</color><color=#89DDFF>,</color> <color=#EEFFFF>Q</color><color=#89DDFF>,</color> <color=#EEFFFF>i</color> <color=#89DDFF>*</color> <color=#F78C6C>8</color><color=#89DDFF>,</color> <color=#F78C6C>8</color><color=#89DDFF>);</color>
        <color=#89DDFF>}</color>

        <color=#EEFFFF>_z</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>xor</color><color=#89DDFF>(</color><color=#EEFFFF>R</color><color=#89DDFF>,</color> <color=#EEFFFF>Q</color><color=#89DDFF>);</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>private</color> <color=#BB80B3>void</color> <color=#82AAFF>p</color><color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i0</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>i1</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>i2</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>i3</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>i4</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>i5</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>i6</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>i7</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>

        <color=#BB80B3>if</color> <color=#89DDFF>(</color><color=#EEFFFF>_useGL</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>GL</color><color=#89DDFF>(</color><color=#EEFFFF>i0</color><color=#89DDFF>,</color> <color=#EEFFFF>i2</color><color=#89DDFF>,</color> <color=#EEFFFF>i4</color><color=#89DDFF>,</color> <color=#EEFFFF>i6</color><color=#89DDFF>);</color>
            <color=#EEFFFF>GL</color><color=#89DDFF>(</color><color=#EEFFFF>i0</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i2</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i4</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i6</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>);</color>
            <color=#EEFFFF>GL</color><color=#89DDFF>(</color><color=#EEFFFF>i1</color><color=#89DDFF>,</color> <color=#EEFFFF>i3</color><color=#89DDFF>,</color> <color=#EEFFFF>i5</color><color=#89DDFF>,</color> <color=#EEFFFF>i7</color><color=#89DDFF>);</color>
            <color=#EEFFFF>GL</color><color=#89DDFF>(</color><color=#EEFFFF>i1</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i3</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i5</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i7</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>);</color>
            <color=#EEFFFF>GL</color><color=#89DDFF>(</color><color=#EEFFFF>i0</color><color=#89DDFF>,</color> <color=#EEFFFF>i2</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i5</color><color=#89DDFF>,</color> <color=#EEFFFF>i7</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>);</color>
            <color=#EEFFFF>GL</color><color=#89DDFF>(</color><color=#EEFFFF>i0</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i3</color><color=#89DDFF>,</color> <color=#EEFFFF>i5</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i6</color><color=#89DDFF>);</color>
            <color=#EEFFFF>GL</color><color=#89DDFF>(</color><color=#EEFFFF>i1</color><color=#89DDFF>,</color> <color=#EEFFFF>i3</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i4</color><color=#89DDFF>,</color> <color=#EEFFFF>i6</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>);</color>
            <color=#EEFFFF>GL</color><color=#89DDFF>(</color><color=#EEFFFF>i1</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i2</color><color=#89DDFF>,</color> <color=#EEFFFF>i4</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i7</color><color=#89DDFF>);</color>
        <color=#89DDFF>}</color> <color=#BB80B3>else</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>GB</color><color=#89DDFF>(</color><color=#EEFFFF>i0</color><color=#89DDFF>,</color> <color=#EEFFFF>i2</color><color=#89DDFF>,</color> <color=#EEFFFF>i4</color><color=#89DDFF>,</color> <color=#EEFFFF>i6</color><color=#89DDFF>);</color>
            <color=#EEFFFF>GB</color><color=#89DDFF>(</color><color=#EEFFFF>i0</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i2</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i4</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i6</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>);</color>
            <color=#EEFFFF>GB</color><color=#89DDFF>(</color><color=#EEFFFF>i1</color><color=#89DDFF>,</color> <color=#EEFFFF>i3</color><color=#89DDFF>,</color> <color=#EEFFFF>i5</color><color=#89DDFF>,</color> <color=#EEFFFF>i7</color><color=#89DDFF>);</color>
            <color=#EEFFFF>GB</color><color=#89DDFF>(</color><color=#EEFFFF>i1</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i3</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i5</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i7</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>);</color>
            <color=#EEFFFF>GB</color><color=#89DDFF>(</color><color=#EEFFFF>i0</color><color=#89DDFF>,</color> <color=#EEFFFF>i2</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i5</color><color=#89DDFF>,</color> <color=#EEFFFF>i7</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>);</color>
            <color=#EEFFFF>GB</color><color=#89DDFF>(</color><color=#EEFFFF>i0</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i3</color><color=#89DDFF>,</color> <color=#EEFFFF>i5</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i6</color><color=#89DDFF>);</color>
            <color=#EEFFFF>GB</color><color=#89DDFF>(</color><color=#EEFFFF>i1</color><color=#89DDFF>,</color> <color=#EEFFFF>i3</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i4</color><color=#89DDFF>,</color> <color=#EEFFFF>i6</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>);</color>
            <color=#EEFFFF>GB</color><color=#89DDFF>(</color><color=#EEFFFF>i1</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i2</color><color=#89DDFF>,</color> <color=#EEFFFF>i4</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i7</color><color=#89DDFF>);</color>
        <color=#89DDFF>}</color>

    <color=#89DDFF>}</color>

    <color=#BB80B3>private</color> <color=#BB80B3>void</color> <color=#82AAFF>pWrapper</color><color=#89DDFF>(</color><color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>vIn</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>idx</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>pAndInit</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>vIn</color><color=#89DDFF>,</color> <color=#F78C6C>0</color><color=#89DDFF>,</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>vIn</color><color=#89DDFF>,</color> <color=#F78C6C>16</color><color=#89DDFF>,</color> <color=#F78C6C>32</color><color=#89DDFF>),</color>
                <color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>vIn</color><color=#89DDFF>,</color> <color=#F78C6C>32</color><color=#89DDFF>,</color> <color=#F78C6C>48</color><color=#89DDFF>),</color> <color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>vIn</color><color=#89DDFF>,</color> <color=#F78C6C>48</color><color=#89DDFF>,</color> <color=#F78C6C>64</color><color=#89DDFF>),</color>
                <color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>vIn</color><color=#89DDFF>,</color> <color=#F78C6C>64</color><color=#89DDFF>,</color> <color=#F78C6C>80</color><color=#89DDFF>),</color> <color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>vIn</color><color=#89DDFF>,</color> <color=#F78C6C>80</color><color=#89DDFF>,</color> <color=#F78C6C>96</color><color=#89DDFF>),</color>
                <color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>vIn</color><color=#89DDFF>,</color> <color=#F78C6C>96</color><color=#89DDFF>,</color> <color=#F78C6C>112</color><color=#89DDFF>),</color> <color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>vIn</color><color=#89DDFF>,</color> <color=#F78C6C>112</color><color=#89DDFF>,</color> <color=#F78C6C>128</color><color=#89DDFF>),</color>
                <color=#EEFFFF>idx</color><color=#89DDFF>);</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>private</color> <color=#BB80B3>void</color> <color=#82AAFF>pAndInit</color><color=#89DDFF>(</color><color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>p1</color><color=#89DDFF>,</color> <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>p2</color><color=#89DDFF>,</color> <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>p3</color><color=#89DDFF>,</color> <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>p4</color><color=#89DDFF>,</color> <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>p5</color><color=#89DDFF>,</color> <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>p6</color><color=#89DDFF>,</color> <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>p7</color><color=#89DDFF>,</color> <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>p8</color><color=#89DDFF>,</color>
            <color=#BB80B3>int</color> <color=#EEFFFF>idx</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>

        <color=#546E7A>// initialize v (global array)</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#F78C6C>0</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>)]</color> <color=#89DDFF>=</color> <color=#EEFFFF>bytes2long</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>p1</color><color=#89DDFF>,</color> <color=#F78C6C>0</color><color=#89DDFF>,</color> <color=#F78C6C>8</color><color=#89DDFF>),</color> <color=#F78C6C>0</color><color=#89DDFF>);</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#F78C6C>1</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>)]</color> <color=#89DDFF>=</color> <color=#EEFFFF>bytes2long</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>p1</color><color=#89DDFF>,</color> <color=#F78C6C>8</color><color=#89DDFF>,</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>0</color><color=#89DDFF>);</color>

        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#F78C6C>2</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>)]</color> <color=#89DDFF>=</color> <color=#EEFFFF>bytes2long</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>p2</color><color=#89DDFF>,</color> <color=#F78C6C>0</color><color=#89DDFF>,</color> <color=#F78C6C>8</color><color=#89DDFF>),</color> <color=#F78C6C>0</color><color=#89DDFF>);</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#F78C6C>3</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>)]</color> <color=#89DDFF>=</color> <color=#EEFFFF>bytes2long</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>p2</color><color=#89DDFF>,</color> <color=#F78C6C>8</color><color=#89DDFF>,</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>0</color><color=#89DDFF>);</color>

        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#F78C6C>4</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>)]</color> <color=#89DDFF>=</color> <color=#EEFFFF>bytes2long</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>p3</color><color=#89DDFF>,</color> <color=#F78C6C>0</color><color=#89DDFF>,</color> <color=#F78C6C>8</color><color=#89DDFF>),</color> <color=#F78C6C>0</color><color=#89DDFF>);</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#F78C6C>5</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>)]</color> <color=#89DDFF>=</color> <color=#EEFFFF>bytes2long</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>p3</color><color=#89DDFF>,</color> <color=#F78C6C>8</color><color=#89DDFF>,</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>0</color><color=#89DDFF>);</color>

        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#F78C6C>6</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>)]</color> <color=#89DDFF>=</color> <color=#EEFFFF>bytes2long</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>p4</color><color=#89DDFF>,</color> <color=#F78C6C>0</color><color=#89DDFF>,</color> <color=#F78C6C>8</color><color=#89DDFF>),</color> <color=#F78C6C>0</color><color=#89DDFF>);</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#F78C6C>7</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>)]</color> <color=#89DDFF>=</color> <color=#EEFFFF>bytes2long</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>p4</color><color=#89DDFF>,</color> <color=#F78C6C>8</color><color=#89DDFF>,</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>0</color><color=#89DDFF>);</color>

        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#F78C6C>8</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>)]</color> <color=#89DDFF>=</color> <color=#EEFFFF>bytes2long</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>p5</color><color=#89DDFF>,</color> <color=#F78C6C>0</color><color=#89DDFF>,</color> <color=#F78C6C>8</color><color=#89DDFF>),</color> <color=#F78C6C>0</color><color=#89DDFF>);</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#F78C6C>9</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>)]</color> <color=#89DDFF>=</color> <color=#EEFFFF>bytes2long</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>p5</color><color=#89DDFF>,</color> <color=#F78C6C>8</color><color=#89DDFF>,</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>0</color><color=#89DDFF>);</color>

        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#F78C6C>10</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>)]</color> <color=#89DDFF>=</color> <color=#EEFFFF>bytes2long</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>p6</color><color=#89DDFF>,</color> <color=#F78C6C>0</color><color=#89DDFF>,</color> <color=#F78C6C>8</color><color=#89DDFF>),</color> <color=#F78C6C>0</color><color=#89DDFF>);</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#F78C6C>11</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>)]</color> <color=#89DDFF>=</color> <color=#EEFFFF>bytes2long</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>p6</color><color=#89DDFF>,</color> <color=#F78C6C>8</color><color=#89DDFF>,</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>0</color><color=#89DDFF>);</color>

        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#F78C6C>12</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>)]</color> <color=#89DDFF>=</color> <color=#EEFFFF>bytes2long</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>p7</color><color=#89DDFF>,</color> <color=#F78C6C>0</color><color=#89DDFF>,</color> <color=#F78C6C>8</color><color=#89DDFF>),</color> <color=#F78C6C>0</color><color=#89DDFF>);</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#F78C6C>13</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>)]</color> <color=#89DDFF>=</color> <color=#EEFFFF>bytes2long</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>p7</color><color=#89DDFF>,</color> <color=#F78C6C>8</color><color=#89DDFF>,</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>0</color><color=#89DDFF>);</color>

        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#F78C6C>14</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>)]</color> <color=#89DDFF>=</color> <color=#EEFFFF>bytes2long</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>p8</color><color=#89DDFF>,</color> <color=#F78C6C>0</color><color=#89DDFF>,</color> <color=#F78C6C>8</color><color=#89DDFF>),</color> <color=#F78C6C>0</color><color=#89DDFF>);</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#F78C6C>15</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>)]</color> <color=#89DDFF>=</color> <color=#EEFFFF>bytes2long</color><color=#89DDFF>(</color><color=#EEFFFF>Arrays</color><color=#89DDFF>.</color><color=#BB80B3>copyOfRange</color><color=#89DDFF>(</color><color=#EEFFFF>p8</color><color=#89DDFF>,</color> <color=#F78C6C>8</color><color=#89DDFF>,</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>0</color><color=#89DDFF>);</color>

        <color=#BB80B3>if</color> <color=#89DDFF>(</color><color=#EEFFFF>_useGL</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>GL</color><color=#89DDFF>(</color><color=#F78C6C>0</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>4</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>8</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>12</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>));</color>
            <color=#EEFFFF>GL</color><color=#89DDFF>(</color><color=#F78C6C>1</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>5</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>9</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>13</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>));</color>
            <color=#EEFFFF>GL</color><color=#89DDFF>(</color><color=#F78C6C>2</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>6</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>10</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>14</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>));</color>
            <color=#EEFFFF>GL</color><color=#89DDFF>(</color><color=#F78C6C>3</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>7</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>11</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>15</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>));</color>
            <color=#EEFFFF>GL</color><color=#89DDFF>(</color><color=#F78C6C>0</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>5</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>10</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>15</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>));</color>
            <color=#EEFFFF>GL</color><color=#89DDFF>(</color><color=#F78C6C>1</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>6</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>11</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>12</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>));</color>
            <color=#EEFFFF>GL</color><color=#89DDFF>(</color><color=#F78C6C>2</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>7</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>8</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>13</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>));</color>
            <color=#EEFFFF>GL</color><color=#89DDFF>(</color><color=#F78C6C>3</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>4</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>9</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>14</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>));</color>
        <color=#89DDFF>}</color> <color=#BB80B3>else</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>GB</color><color=#89DDFF>(</color><color=#F78C6C>0</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>4</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>8</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>12</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>));</color>
            <color=#EEFFFF>GB</color><color=#89DDFF>(</color><color=#F78C6C>1</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>5</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>9</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>13</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>));</color>
            <color=#EEFFFF>GB</color><color=#89DDFF>(</color><color=#F78C6C>2</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>6</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>10</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>14</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>));</color>
            <color=#EEFFFF>GB</color><color=#89DDFF>(</color><color=#F78C6C>3</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>7</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>11</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>15</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>));</color>
            <color=#EEFFFF>GB</color><color=#89DDFF>(</color><color=#F78C6C>0</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>5</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>10</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>15</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>));</color>
            <color=#EEFFFF>GB</color><color=#89DDFF>(</color><color=#F78C6C>1</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>6</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>11</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>12</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>));</color>
            <color=#EEFFFF>GB</color><color=#89DDFF>(</color><color=#F78C6C>2</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>7</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>8</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>13</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>));</color>
            <color=#EEFFFF>GB</color><color=#89DDFF>(</color><color=#F78C6C>3</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>4</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>9</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>),</color> <color=#F78C6C>14</color> <color=#89DDFF>+</color> <color=#89DDFF>(</color><color=#EEFFFF>idx</color> <color=#89DDFF>*</color> <color=#F78C6C>16</color><color=#89DDFF>));</color>
        <color=#89DDFF>}</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>public</color> <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#82AAFF>doFinal</color><color=#89DDFF>()</color> <color=#89DDFF>{</color>
        <color=#BB80B3>return</color> <color=#EEFFFF>_z</color><color=#89DDFF>;</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>private</color> <color=#BB80B3>void</color> <color=#82AAFF>GL</color><color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>posA</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>posB</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>posC</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>posD</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>

        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posA</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posA</color><color=#89DDFF>]</color> <color=#89DDFF>+</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posB</color><color=#89DDFF>];</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posD</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>rotr64</color><color=#89DDFF>(</color><color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posD</color><color=#89DDFF>]</color> <color=#89DDFF>^</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posA</color><color=#89DDFF>],</color> <color=#F78C6C>32</color><color=#89DDFF>);</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posC</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posC</color><color=#89DDFF>]</color> <color=#89DDFF>+</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posD</color><color=#89DDFF>];</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posB</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>rotr64</color><color=#89DDFF>(</color><color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posB</color><color=#89DDFF>]</color> <color=#89DDFF>^</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posC</color><color=#89DDFF>],</color> <color=#F78C6C>24</color><color=#89DDFF>);</color> <color=#546E7A>// replaces 25 of BLAKE</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posA</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posA</color><color=#89DDFF>]</color> <color=#89DDFF>+</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posB</color><color=#89DDFF>];</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posD</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>rotr64</color><color=#89DDFF>(</color><color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posD</color><color=#89DDFF>]</color> <color=#89DDFF>^</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posA</color><color=#89DDFF>],</color> <color=#F78C6C>16</color><color=#89DDFF>);</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posC</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posC</color><color=#89DDFF>]</color> <color=#89DDFF>+</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posD</color><color=#89DDFF>];</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posB</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>rotr64</color><color=#89DDFF>(</color><color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posB</color><color=#89DDFF>]</color> <color=#89DDFF>^</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posC</color><color=#89DDFF>],</color> <color=#F78C6C>63</color><color=#89DDFF>);</color> <color=#546E7A>// replaces 11 of BLAKE</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>private</color> <color=#BB80B3>void</color> <color=#82AAFF>GB</color><color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>posA</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>posB</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>posC</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>posD</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>

        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posA</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posA</color><color=#89DDFF>]</color> <color=#89DDFF>+</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posB</color><color=#89DDFF>]</color> <color=#89DDFF>+</color>
                <color=#F78C6C>2</color> <color=#89DDFF>*</color> <color=#89DDFF>(</color><color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posA</color><color=#89DDFF>]</color> <color=#89DDFF>&</color> <color=#F78C6C>0x00000000FFFFFFFFL</color><color=#89DDFF>)</color>
                        <color=#89DDFF>*</color> <color=#89DDFF>(</color><color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posB</color><color=#89DDFF>]</color> <color=#89DDFF>&</color> <color=#F78C6C>0x00000000FFFFFFFFL</color><color=#89DDFF>);</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posD</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>rotr64</color><color=#89DDFF>(</color><color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posD</color><color=#89DDFF>]</color> <color=#89DDFF>^</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posA</color><color=#89DDFF>],</color> <color=#F78C6C>32</color><color=#89DDFF>);</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posC</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posC</color><color=#89DDFF>]</color> <color=#89DDFF>+</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posD</color><color=#89DDFF>]</color> <color=#89DDFF>+</color>
                <color=#F78C6C>2</color> <color=#89DDFF>*</color> <color=#89DDFF>(</color><color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posC</color><color=#89DDFF>]</color> <color=#89DDFF>&</color> <color=#F78C6C>0x00000000FFFFFFFFL</color><color=#89DDFF>)</color>
                        <color=#89DDFF>*</color> <color=#89DDFF>(</color><color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posD</color><color=#89DDFF>]</color> <color=#89DDFF>&</color> <color=#F78C6C>0x00000000FFFFFFFFL</color><color=#89DDFF>);</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posB</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>rotr64</color><color=#89DDFF>(</color><color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posB</color><color=#89DDFF>]</color> <color=#89DDFF>^</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posC</color><color=#89DDFF>],</color> <color=#F78C6C>24</color><color=#89DDFF>);</color> <color=#546E7A>// replaces 25 of BLAKE</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posA</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posA</color><color=#89DDFF>]</color> <color=#89DDFF>+</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posB</color><color=#89DDFF>]</color> <color=#89DDFF>+</color>
                <color=#F78C6C>2</color> <color=#89DDFF>*</color> <color=#89DDFF>(</color><color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posA</color><color=#89DDFF>]</color> <color=#89DDFF>&</color> <color=#F78C6C>0x00000000FFFFFFFFL</color><color=#89DDFF>)</color>
                        <color=#89DDFF>*</color> <color=#89DDFF>(</color><color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posB</color><color=#89DDFF>]</color> <color=#89DDFF>&</color> <color=#F78C6C>0x00000000FFFFFFFFL</color><color=#89DDFF>);</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posD</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>rotr64</color><color=#89DDFF>(</color><color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posD</color><color=#89DDFF>]</color> <color=#89DDFF>^</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posA</color><color=#89DDFF>],</color> <color=#F78C6C>16</color><color=#89DDFF>);</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posC</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posC</color><color=#89DDFF>]</color> <color=#89DDFF>+</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posD</color><color=#89DDFF>]</color> <color=#89DDFF>+</color>
                <color=#F78C6C>2</color> <color=#89DDFF>*</color> <color=#89DDFF>(</color><color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posC</color><color=#89DDFF>]</color> <color=#89DDFF>&</color> <color=#F78C6C>0x00000000FFFFFFFFL</color><color=#89DDFF>)</color>
                        <color=#89DDFF>*</color> <color=#89DDFF>(</color><color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posD</color><color=#89DDFF>]</color> <color=#89DDFF>&</color> <color=#F78C6C>0x00000000FFFFFFFFL</color><color=#89DDFF>);</color>
        <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posB</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>rotr64</color><color=#89DDFF>(</color><color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posB</color><color=#89DDFF>]</color> <color=#89DDFF>^</color> <color=#EEFFFF>_v</color><color=#89DDFF>[</color><color=#EEFFFF>posC</color><color=#89DDFF>],</color> <color=#F78C6C>63</color><color=#89DDFF>);</color> <color=#546E7A>// replaces 11 of BLAKE</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>private</color> <color=#BB80B3>long</color> <color=#82AAFF>rotr64</color><color=#89DDFF>(</color><color=#BB80B3>long</color> <color=#EEFFFF>x</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>rot</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#BB80B3>return</color> <color=#EEFFFF>x</color> <color=#89DDFF>>>></color> <color=#EEFFFF>rot</color> <color=#89DDFF>|</color> <color=#89DDFF>(</color><color=#EEFFFF>x</color> <color=#89DDFF><<</color> <color=#89DDFF>(</color><color=#F78C6C>64</color> <color=#89DDFF>-</color> <color=#EEFFFF>rot</color><color=#89DDFF>));</color>
    <color=#89DDFF>}</color>

    <color=#546E7A>// convert one long value in byte array</color>
    <color=#546E7A>// little-endian byte order!</color>
    <color=#BB80B3>private</color> <color=#BB80B3>final</color> <color=#BB80B3>static</color> <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#82AAFF>long2bytes</color><color=#89DDFF>(</color><color=#BB80B3>long</color> <color=#EEFFFF>longValue</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#BB80B3>return</color> <color=#BB80B3>new</color> <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#89DDFF>{</color>
                <color=#89DDFF>(</color><color=#BB80B3>byte</color><color=#89DDFF>)</color> <color=#EEFFFF>longValue</color><color=#89DDFF>,</color>
                <color=#89DDFF>(</color><color=#BB80B3>byte</color><color=#89DDFF>)</color> <color=#89DDFF>(</color><color=#EEFFFF>longValue</color> <color=#89DDFF>>></color> <color=#F78C6C>8</color><color=#89DDFF>),</color>
                <color=#89DDFF>(</color><color=#BB80B3>byte</color><color=#89DDFF>)</color> <color=#89DDFF>(</color><color=#EEFFFF>longValue</color> <color=#89DDFF>>></color> <color=#F78C6C>16</color><color=#89DDFF>),</color>
                <color=#89DDFF>(</color><color=#BB80B3>byte</color><color=#89DDFF>)</color> <color=#89DDFF>(</color><color=#EEFFFF>longValue</color> <color=#89DDFF>>></color> <color=#F78C6C>24</color><color=#89DDFF>),</color>
                <color=#89DDFF>(</color><color=#BB80B3>byte</color><color=#89DDFF>)</color> <color=#89DDFF>(</color><color=#EEFFFF>longValue</color> <color=#89DDFF>>></color> <color=#F78C6C>32</color><color=#89DDFF>),</color>
                <color=#89DDFF>(</color><color=#BB80B3>byte</color><color=#89DDFF>)</color> <color=#89DDFF>(</color><color=#EEFFFF>longValue</color> <color=#89DDFF>>></color> <color=#F78C6C>40</color><color=#89DDFF>),</color>
                <color=#89DDFF>(</color><color=#BB80B3>byte</color><color=#89DDFF>)</color> <color=#89DDFF>(</color><color=#EEFFFF>longValue</color> <color=#89DDFF>>></color> <color=#F78C6C>48</color><color=#89DDFF>),</color>
                <color=#89DDFF>(</color><color=#BB80B3>byte</color><color=#89DDFF>)</color> <color=#89DDFF>(</color><color=#EEFFFF>longValue</color> <color=#89DDFF>>></color> <color=#F78C6C>56</color><color=#89DDFF>)</color> <color=#89DDFF>};</color>
    <color=#89DDFF>}</color>

    <color=#546E7A>// little-endian byte order!</color>
    <color=#BB80B3>private</color> <color=#BB80B3>final</color> <color=#BB80B3>static</color> <color=#BB80B3>long</color> <color=#82AAFF>bytes2long</color><color=#89DDFF>(</color><color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>byteArray</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>offset</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>

        <color=#BB80B3>return</color> <color=#89DDFF>(((</color><color=#BB80B3>long</color><color=#89DDFF>)</color> <color=#EEFFFF>byteArray</color><color=#89DDFF>[</color><color=#EEFFFF>offset</color><color=#89DDFF>]</color> <color=#89DDFF>&</color> <color=#F78C6C>0xFF</color><color=#89DDFF>)</color> <color=#89DDFF>|</color>
                <color=#89DDFF>(((</color><color=#BB80B3>long</color><color=#89DDFF>)</color> <color=#EEFFFF>byteArray</color><color=#89DDFF>[</color><color=#EEFFFF>offset</color> <color=#89DDFF>+</color> <color=#F78C6C>1</color><color=#89DDFF>]</color> <color=#89DDFF>&</color> <color=#F78C6C>0xFF</color><color=#89DDFF>)</color> <color=#89DDFF><<</color> <color=#F78C6C>8</color><color=#89DDFF>)</color> <color=#89DDFF>|</color>
                <color=#89DDFF>(((</color><color=#BB80B3>long</color><color=#89DDFF>)</color> <color=#EEFFFF>byteArray</color><color=#89DDFF>[</color><color=#EEFFFF>offset</color> <color=#89DDFF>+</color> <color=#F78C6C>2</color><color=#89DDFF>]</color> <color=#89DDFF>&</color> <color=#F78C6C>0xFF</color><color=#89DDFF>)</color> <color=#89DDFF><<</color> <color=#F78C6C>16</color><color=#89DDFF>)</color> <color=#89DDFF>|</color>
                <color=#89DDFF>(((</color><color=#BB80B3>long</color><color=#89DDFF>)</color> <color=#EEFFFF>byteArray</color><color=#89DDFF>[</color><color=#EEFFFF>offset</color> <color=#89DDFF>+</color> <color=#F78C6C>3</color><color=#89DDFF>]</color> <color=#89DDFF>&</color> <color=#F78C6C>0xFF</color><color=#89DDFF>)</color> <color=#89DDFF><<</color> <color=#F78C6C>24</color><color=#89DDFF>)</color> <color=#89DDFF>|</color>
                <color=#89DDFF>(((</color><color=#BB80B3>long</color><color=#89DDFF>)</color> <color=#EEFFFF>byteArray</color><color=#89DDFF>[</color><color=#EEFFFF>offset</color> <color=#89DDFF>+</color> <color=#F78C6C>4</color><color=#89DDFF>]</color> <color=#89DDFF>&</color> <color=#F78C6C>0xFF</color><color=#89DDFF>)</color> <color=#89DDFF><<</color> <color=#F78C6C>32</color><color=#89DDFF>)</color> <color=#89DDFF>|</color>
                <color=#89DDFF>(((</color><color=#BB80B3>long</color><color=#89DDFF>)</color> <color=#EEFFFF>byteArray</color><color=#89DDFF>[</color><color=#EEFFFF>offset</color> <color=#89DDFF>+</color> <color=#F78C6C>5</color><color=#89DDFF>]</color> <color=#89DDFF>&</color> <color=#F78C6C>0xFF</color><color=#89DDFF>)</color> <color=#89DDFF><<</color> <color=#F78C6C>40</color><color=#89DDFF>)</color> <color=#89DDFF>|</color>
                <color=#89DDFF>(((</color><color=#BB80B3>long</color><color=#89DDFF>)</color> <color=#EEFFFF>byteArray</color><color=#89DDFF>[</color><color=#EEFFFF>offset</color> <color=#89DDFF>+</color> <color=#F78C6C>6</color><color=#89DDFF>]</color> <color=#89DDFF>&</color> <color=#F78C6C>0xFF</color><color=#89DDFF>)</color> <color=#89DDFF><<</color> <color=#F78C6C>48</color><color=#89DDFF>)</color> <color=#89DDFF>|</color>
                <color=#89DDFF>(((</color><color=#BB80B3>long</color><color=#89DDFF>)</color> <color=#EEFFFF>byteArray</color><color=#89DDFF>[</color><color=#EEFFFF>offset</color> <color=#89DDFF>+</color> <color=#F78C6C>7</color><color=#89DDFF>]</color> <color=#89DDFF>&</color> <color=#F78C6C>0xFF</color><color=#89DDFF>)</color> <color=#89DDFF><<</color> <color=#F78C6C>56</color><color=#89DDFF>));</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>reset</color><color=#89DDFF>()</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>_v</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#BB80B3>long</color><color=#89DDFF>[</color><color=#F78C6C>128</color><color=#89DDFF>];</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>update</color><color=#89DDFF>(</color><color=#BB80B3>byte</color> <color=#EEFFFF>b</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#BB80B3>return</color><color=#89DDFF>;</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>update</color><color=#89DDFF>(</color><color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>message</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>offset</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>len</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#BB80B3>return</color><color=#89DDFF>;</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>setVertexIndex</color><color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>r</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#BB80B3>return</color><color=#89DDFF>;</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>public</color> <color=#EEFFFF>String</color> <color=#82AAFF>getName</color><color=#89DDFF>()</color> <color=#89DDFF>{</color>
        <color=#BB80B3>return</color> <color=#EEFFFF>name</color><color=#89DDFF>;</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>public</color> <color=#BB80B3>int</color> <color=#82AAFF>getOutputSize</color><color=#89DDFF>()</color> <color=#89DDFF>{</color>
        <color=#BB80B3>return</color> <color=#EEFFFF>anzByte</color><color=#89DDFF>;</color>
    <color=#89DDFF>}</color>

<color=#89DDFF>}</color>