<color=#89DDFF>package</color> <color=#FFCB6B>main.java.components.graph.algorithms</color><color=#89DDFF>;</color>

<color=#89DDFF>import</color> <color=#FFCB6B>main.java.Helper</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>main.java.components.graph.GraphInterface</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>main.java.components.hash.HashInterface</color><color=#89DDFF>;</color>

<color=#BB80B3>public</color> <color=#BB80B3>class</color> <color=#FFCB6B>DoubleButterflyGraph</color> <color=#BB80B3>implements</color> <color=#EEFFFF>GraphInterface</color> <color=#89DDFF>{</color>

    <color=#EEFFFF>HashInterface</color> <color=#EEFFFF>_h</color><color=#89DDFF>;</color>
    <color=#EEFFFF>HashInterface</color> <color=#EEFFFF>_hPrime</color><color=#89DDFF>;</color>
    <color=#EEFFFF>Helper</color> <color=#EEFFFF>helper</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>Helper</color><color=#89DDFF>();</color>
    <color=#EEFFFF>IdxInterface</color> <color=#EEFFFF>indexing</color><color=#89DDFF>;</color>

    <color=#82AAFF>@Override</color>
    <color=#BB80B3>public</color> <color=#BB80B3>byte</color><color=#89DDFF>[][]</color> <color=#82AAFF>graph</color><color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>g</color><color=#89DDFF>,</color> <color=#BB80B3>byte</color><color=#89DDFF>[][]</color> <color=#EEFFFF>v</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>lambda</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>

        <color=#BB80B3>int</color> <color=#EEFFFF>dim1</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#BB80B3>int</color><color=#89DDFF>)</color> <color=#EEFFFF>Math</color><color=#89DDFF>.</color><color=#BB80B3>pow</color><color=#89DDFF>(</color><color=#F78C6C>2</color><color=#89DDFF>,</color> <color=#EEFFFF>g</color><color=#89DDFF>);</color>
        <color=#89DDFF>;</color>
        <color=#BB80B3>int</color> <color=#EEFFFF>dim2</color> <color=#89DDFF>=</color> <color=#EEFFFF>_hPrime</color><color=#89DDFF>.</color><color=#BB80B3>getOutputSize</color><color=#89DDFF>();</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[][]</color> <color=#EEFFFF>r</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#BB80B3>byte</color><color=#89DDFF>[</color><color=#EEFFFF>dim1</color><color=#89DDFF>][</color><color=#EEFFFF>dim2</color><color=#89DDFF>];</color>

        <color=#BB80B3>int</color> <color=#EEFFFF>jLimit</color> <color=#89DDFF>=</color> <color=#F78C6C>2</color> <color=#89DDFF>*</color> <color=#EEFFFF>g</color> <color=#89DDFF>-</color> <color=#F78C6C>1</color><color=#89DDFF>;</color>
        <color=#BB80B3>int</color> <color=#EEFFFF>iLimit</color> <color=#89DDFF>=</color> <color=#EEFFFF>dim1</color> <color=#89DDFF>-</color> <color=#F78C6C>1</color><color=#89DDFF>;</color>

        <color=#EEFFFF>_hPrime</color><color=#89DDFF>.</color><color=#BB80B3>reset</color><color=#89DDFF>();</color>

        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>k</color> <color=#89DDFF>=</color> <color=#F78C6C>1</color><color=#89DDFF>;</color> <color=#EEFFFF>k</color> <color=#89DDFF><=</color> <color=#EEFFFF>lambda</color><color=#89DDFF>;</color> <color=#EEFFFF>k</color><color=#89DDFF>++)</color> <color=#89DDFF>{</color>
            <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>j</color> <color=#89DDFF>=</color> <color=#F78C6C>1</color><color=#89DDFF>;</color> <color=#EEFFFF>j</color> <color=#89DDFF><=</color> <color=#EEFFFF>jLimit</color><color=#89DDFF>;</color> <color=#EEFFFF>j</color><color=#89DDFF>++)</color> <color=#89DDFF>{</color>

                <color=#EEFFFF>r</color><color=#89DDFF>[</color><color=#F78C6C>0</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>hFirst</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>concateByteArrays</color><color=#89DDFF>(</color>
                        <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>xor</color><color=#89DDFF>(</color><color=#EEFFFF>v</color><color=#89DDFF>[</color><color=#EEFFFF>dim1</color> <color=#89DDFF>-</color> <color=#F78C6C>1</color><color=#89DDFF>],</color> <color=#EEFFFF>v</color><color=#89DDFF>[</color><color=#F78C6C>0</color><color=#89DDFF>]),</color>
                        <color=#EEFFFF>v</color><color=#89DDFF>[(</color><color=#BB80B3>int</color><color=#89DDFF>)</color> <color=#EEFFFF>indexing</color><color=#89DDFF>.</color><color=#BB80B3>getIndex</color><color=#89DDFF>((</color><color=#BB80B3>long</color><color=#89DDFF>)</color> <color=#EEFFFF>g</color><color=#89DDFF>,</color> <color=#89DDFF>(</color><color=#BB80B3>long</color><color=#89DDFF>)</color> <color=#EEFFFF>j</color> <color=#89DDFF>-</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#F78C6C>0</color><color=#89DDFF>)]));</color>

                <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>1</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><=</color> <color=#EEFFFF>iLimit</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF>++)</color> <color=#89DDFF>{</color>
                    <color=#EEFFFF>_hPrime</color><color=#89DDFF>.</color><color=#BB80B3>update</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>concateByteArrays</color><color=#89DDFF>(</color>
                            <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>xor</color><color=#89DDFF>(</color><color=#EEFFFF>r</color><color=#89DDFF>[</color><color=#EEFFFF>i</color> <color=#89DDFF>-</color> <color=#F78C6C>1</color><color=#89DDFF>],</color> <color=#EEFFFF>v</color><color=#89DDFF>[</color><color=#EEFFFF>i</color><color=#89DDFF>]),</color>
                            <color=#EEFFFF>v</color><color=#89DDFF>[(</color><color=#BB80B3>int</color><color=#89DDFF>)</color> <color=#EEFFFF>indexing</color><color=#89DDFF>.</color><color=#BB80B3>getIndex</color><color=#89DDFF>((</color><color=#BB80B3>long</color><color=#89DDFF>)</color> <color=#EEFFFF>g</color><color=#89DDFF>,</color> <color=#89DDFF>(</color><color=#BB80B3>long</color><color=#89DDFF>)</color> <color=#EEFFFF>j</color> <color=#89DDFF>-</color> <color=#F78C6C>1</color><color=#89DDFF>,</color> <color=#EEFFFF>i</color><color=#89DDFF>)]));</color>
                    <color=#EEFFFF>r</color><color=#89DDFF>[</color><color=#EEFFFF>i</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>_hPrime</color><color=#89DDFF>.</color><color=#BB80B3>doFinal</color><color=#89DDFF>();</color>
                <color=#89DDFF>}</color>
                <color=#EEFFFF>System</color><color=#89DDFF>.</color><color=#BB80B3>arraycopy</color><color=#89DDFF>(</color><color=#EEFFFF>r</color><color=#89DDFF>,</color> <color=#F78C6C>0</color><color=#89DDFF>,</color> <color=#EEFFFF>v</color><color=#89DDFF>,</color> <color=#F78C6C>0</color><color=#89DDFF>,</color> <color=#EEFFFF>r</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>);</color>
            <color=#89DDFF>}</color>
        <color=#89DDFF>}</color>
        <color=#BB80B3>return</color> <color=#EEFFFF>v</color><color=#89DDFF>;</color>
    <color=#89DDFF>}</color>

    <color=#82AAFF>@Override</color>
    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>setH</color><color=#89DDFF>(</color><color=#EEFFFF>HashInterface</color> <color=#EEFFFF>h</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>_h</color> <color=#89DDFF>=</color> <color=#EEFFFF>h</color><color=#89DDFF>;</color>
    <color=#89DDFF>}</color>

    <color=#82AAFF>@Override</color>
    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>setHPrime</color><color=#89DDFF>(</color><color=#EEFFFF>HashInterface</color> <color=#EEFFFF>hPrime</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>_hPrime</color> <color=#89DDFF>=</color> <color=#EEFFFF>hPrime</color><color=#89DDFF>;</color>
    <color=#89DDFF>}</color>

    <color=#82AAFF>@Override</color>
    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>setIndexing</color><color=#89DDFF>(</color><color=#EEFFFF>IdxInterface</color> <color=#EEFFFF>idx</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>indexing</color> <color=#89DDFF>=</color> <color=#EEFFFF>idx</color><color=#89DDFF>;</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>private</color> <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#82AAFF>hFirst</color><color=#89DDFF>(</color><color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>in</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#BB80B3>int</color> <color=#EEFFFF>n</color> <color=#89DDFF>=</color> <color=#EEFFFF>_h</color><color=#89DDFF>.</color><color=#BB80B3>getOutputSize</color><color=#89DDFF>();</color>
        <color=#BB80B3>int</color> <color=#EEFFFF>k</color> <color=#89DDFF>=</color> <color=#EEFFFF>_hPrime</color><color=#89DDFF>.</color><color=#BB80B3>getOutputSize</color><color=#89DDFF>();</color>
        <color=#BB80B3>int</color> <color=#EEFFFF>l</color> <color=#89DDFF>=</color> <color=#EEFFFF>k</color> <color=#89DDFF>/</color> <color=#EEFFFF>n</color><color=#89DDFF>;</color>

        <color=#BB80B3>byte</color><color=#89DDFF>[][]</color> <color=#EEFFFF>w</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#BB80B3>byte</color><color=#89DDFF>[</color><color=#EEFFFF>l</color><color=#89DDFF>][</color><color=#EEFFFF>n</color><color=#89DDFF>];</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>iByte</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#BB80B3>byte</color><color=#89DDFF>[</color><color=#F78C6C>1</color><color=#89DDFF>];</color>

        <color=#EEFFFF>_h</color><color=#89DDFF>.</color><color=#BB80B3>update</color><color=#89DDFF>(</color><color=#EEFFFF>in</color><color=#89DDFF>);</color>
        <color=#EEFFFF>w</color><color=#89DDFF>[</color><color=#F78C6C>0</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>_h</color><color=#89DDFF>.</color><color=#BB80B3>doFinal</color><color=#89DDFF>();</color>
        <color=#EEFFFF>_h</color><color=#89DDFF>.</color><color=#BB80B3>reset</color><color=#89DDFF>();</color>

        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>1</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><=</color> <color=#EEFFFF>l</color> <color=#89DDFF>-</color> <color=#F78C6C>1</color><color=#89DDFF>;</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>iByte</color><color=#89DDFF>[</color><color=#F78C6C>0</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#BB80B3>byte</color><color=#89DDFF>)</color> <color=#EEFFFF>i</color><color=#89DDFF>;</color>
            <color=#EEFFFF>_h</color><color=#89DDFF>.</color><color=#BB80B3>update</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>concateByteArrays</color><color=#89DDFF>(</color><color=#EEFFFF>iByte</color><color=#89DDFF>,</color> <color=#EEFFFF>w</color><color=#89DDFF>[</color><color=#F78C6C>0</color><color=#89DDFF>]));</color>
            <color=#EEFFFF>w</color><color=#89DDFF>[</color><color=#EEFFFF>i</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>_h</color><color=#89DDFF>.</color><color=#BB80B3>doFinal</color><color=#89DDFF>();</color>
            <color=#EEFFFF>_h</color><color=#89DDFF>.</color><color=#BB80B3>reset</color><color=#89DDFF>();</color>
        <color=#89DDFF>}</color>
        <color=#BB80B3>return</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>twoDimByteArrayToOne</color><color=#89DDFF>(</color><color=#EEFFFF>w</color><color=#89DDFF>);</color>
    <color=#89DDFF>}</color>
<color=#89DDFF>}</color>