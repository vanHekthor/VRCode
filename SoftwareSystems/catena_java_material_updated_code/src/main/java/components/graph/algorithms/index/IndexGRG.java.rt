<color=#89DDFF>package</color> <color=#FFCB6B>main.java.components.graph.algorithms.index</color><color=#89DDFF>;</color>

<color=#89DDFF>import</color> <color=#FFCB6B>main.java.Helper</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>main.java.components.graph.algorithms.IdxInterface</color><color=#89DDFF>;</color>

<color=#BB80B3>public</color> <color=#BB80B3>class</color> <color=#FFCB6B>IndexGRG</color> <color=#BB80B3>implements</color> <color=#EEFFFF>IdxInterface</color> <color=#89DDFF>{</color>

    <color=#BB80B3>int</color> <color=#EEFFFF>_l</color><color=#89DDFF>;</color>
    <color=#EEFFFF>Helper</color> <color=#EEFFFF>h</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>Helper</color><color=#89DDFF>();</color>

    <color=#BB80B3>public</color> <color=#82AAFF>IndexGRG</color><color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>l</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>_l</color> <color=#89DDFF>=</color> <color=#EEFFFF>l</color><color=#89DDFF>;</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>public</color> <color=#BB80B3>int</color> <color=#82AAFF>getIndex</color><color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>g</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>IndexBRG</color> <color=#EEFFFF>brg</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>IndexBRG</color><color=#89DDFF>();</color>
        <color=#BB80B3>return</color> <color=#89DDFF>(</color><color=#EEFFFF>brg</color><color=#89DDFF>.</color><color=#BB80B3>getIndex</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>,</color> <color=#EEFFFF>g</color><color=#89DDFF>))</color> <color=#89DDFF>^</color>
                <color=#89DDFF>(</color><color=#EEFFFF>brg</color><color=#89DDFF>.</color><color=#BB80B3>getIndex</color><color=#89DDFF>((</color><color=#F78C6C>1</color> <color=#89DDFF><<</color> <color=#EEFFFF>g</color><color=#89DDFF>)</color> <color=#89DDFF>-</color> <color=#F78C6C>1</color> <color=#89DDFF>-</color> <color=#EEFFFF>i</color><color=#89DDFF>,</color> <color=#EEFFFF>g</color><color=#89DDFF>)</color> <color=#89DDFF>>></color> <color=#89DDFF>(</color><color=#BB80B3>int</color><color=#89DDFF>)</color> <color=#EEFFFF>Math</color><color=#89DDFF>.</color><color=#BB80B3>ceil</color><color=#89DDFF>((</color><color=#BB80B3>float</color><color=#89DDFF>)</color> <color=#EEFFFF>g</color> <color=#89DDFF>/</color> <color=#89DDFF>(</color><color=#BB80B3>float</color><color=#89DDFF>)</color> <color=#EEFFFF>_l</color><color=#89DDFF>));</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>public</color> <color=#BB80B3>long</color> <color=#82AAFF>getIndex</color><color=#89DDFF>(</color><color=#BB80B3>long</color> <color=#EEFFFF>i</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>g</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>IndexBRG</color> <color=#EEFFFF>brg</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>IndexBRG</color><color=#89DDFF>();</color>
        <color=#BB80B3>return</color> <color=#89DDFF>(</color><color=#EEFFFF>brg</color><color=#89DDFF>.</color><color=#BB80B3>getIndex</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>,</color> <color=#EEFFFF>g</color><color=#89DDFF>))</color> <color=#89DDFF>^</color>
                <color=#89DDFF>(</color><color=#EEFFFF>brg</color><color=#89DDFF>.</color><color=#BB80B3>getIndex</color><color=#89DDFF>((</color><color=#F78C6C>1</color> <color=#89DDFF><<</color> <color=#EEFFFF>g</color><color=#89DDFF>)</color> <color=#89DDFF>-</color> <color=#F78C6C>1</color> <color=#89DDFF>-</color> <color=#EEFFFF>i</color><color=#89DDFF>,</color> <color=#EEFFFF>g</color><color=#89DDFF>)</color> <color=#89DDFF>>></color> <color=#89DDFF>(</color><color=#BB80B3>int</color><color=#89DDFF>)</color> <color=#EEFFFF>Math</color><color=#89DDFF>.</color><color=#BB80B3>ceil</color><color=#89DDFF>((</color><color=#BB80B3>float</color><color=#89DDFF>)</color> <color=#EEFFFF>g</color> <color=#89DDFF>/</color> <color=#89DDFF>(</color><color=#BB80B3>float</color><color=#89DDFF>)</color> <color=#EEFFFF>_l</color><color=#89DDFF>));</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>public</color> <color=#BB80B3>int</color> <color=#82AAFF>getIndex</color><color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>j</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>g</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#BB80B3>return</color> <color=#89DDFF>-</color><color=#F78C6C>1</color><color=#89DDFF>;</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>public</color> <color=#BB80B3>long</color> <color=#82AAFF>getIndex</color><color=#89DDFF>(</color><color=#BB80B3>long</color> <color=#EEFFFF>i</color><color=#89DDFF>,</color> <color=#BB80B3>long</color> <color=#EEFFFF>j</color><color=#89DDFF>,</color> <color=#BB80B3>int</color> <color=#EEFFFF>g</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#BB80B3>return</color> <color=#89DDFF>-</color><color=#F78C6C>1</color><color=#89DDFF>;</color>
    <color=#89DDFF>}</color>

<color=#89DDFF>}</color>