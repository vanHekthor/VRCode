<color=#89DDFF>package</color> <color=#FFCB6B>test.java</color><color=#89DDFF>;</color>

<color=#89DDFF>import static</color> <color=#FFCB6B>org.junit.Assert.assertEquals</color><color=#89DDFF>;</color>

<color=#89DDFF>import</color> <color=#FFCB6B>java.io.File</color><color=#89DDFF>;</color>

<color=#89DDFF>import</color> <color=#FFCB6B>org.json.JSONArray</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>org.json.JSONObject</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>org.junit.Test</color><color=#89DDFF>;</color>

<color=#89DDFF>import</color> <color=#FFCB6B>main.java.Catena</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>main.java.DefaultInstances</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>main.java.Helper</color><color=#89DDFF>;</color>

<color=#BB80B3>public</color> <color=#BB80B3>class</color> <color=#FFCB6B>DefaultInstancesTest</color> <color=#89DDFF>{</color>

    <color=#EEFFFF>Helper</color> <color=#EEFFFF>helper</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>Helper</color><color=#89DDFF>();</color>

    <color=#546E7A>// private String pathDragonfly = "src/test/resources/catenaDragonfly.json";</color>
    <color=#546E7A>// private File fileDragonfly = new File(pathDragonfly);</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// private String pathDragonflyFull =</color>
    <color=#546E7A>// "src/test/resources/catenaDragonflyFull.json";</color>
    <color=#546E7A>// private File fileDragonflyFull = new File(pathDragonflyFull);</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// private String pathButterfly = "src/test/resources/catenaButterfly.json";</color>
    <color=#546E7A>// private File butterflyFile = new File(pathButterfly);</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// private String pathButterflyFull =</color>
    <color=#546E7A>// "src/test/resources/catenaButterflyFull.json";</color>
    <color=#546E7A>// private File butterflyFileFull = new File(pathButterflyFull);</color>

    <color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathDragonflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/testvectors/catenaDragonflyReduced.json"</color><color=#89DDFF>;</color>
    <color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>fileDragonflyReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathDragonflyReduced</color><color=#89DDFF>);</color>

    <color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathDragonflyFullReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/testvectors/catenaDragonflyFullReduced.json"</color><color=#89DDFF>;</color>
    <color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>fileDragonflyFullReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathDragonflyFullReduced</color><color=#89DDFF>);</color>

    <color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathButterflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/testvectors/catenaButterflyReduced.json"</color><color=#89DDFF>;</color>
    <color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>butterflyFileReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathButterflyReduced</color><color=#89DDFF>);</color>

    <color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathButterflyFullReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/testvectors/catenaButterflyFullReduced.json"</color><color=#89DDFF>;</color>
    <color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>butterflyFileFullReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathButterflyFullReduced</color><color=#89DDFF>);</color>

    <color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathcatenaHorseflyFullReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/testvectors/catenaHorseflyFullReduced.json"</color><color=#89DDFF>;</color>
    <color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>filecatenaHorseflyFullReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathcatenaHorseflyFullReduced</color><color=#89DDFF>);</color>

    <color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathcatenaLanternflyFullReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/testvectors/catenaLanternflyFullReduced.json"</color><color=#89DDFF>;</color>
    <color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>filecatenaLanternflyFullReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathcatenaLanternflyFullReduced</color><color=#89DDFF>);</color>

    <color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathcatenaMydasflyFullReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/testvectors/catenaMydasflyFullReduced.json"</color><color=#89DDFF>;</color>
    <color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>filecatenaMydasflyFullReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathcatenaMydasflyFullReduced</color><color=#89DDFF>);</color>

    <color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathcatenaStoneflyFullReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/testvectors/catenaStoneflyFullReduced.json"</color><color=#89DDFF>;</color>
    <color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>filecatenaStoneflyFullReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathcatenaStoneflyFullReduced</color><color=#89DDFF>);</color>

    <color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathcatenaHorseflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/testvectors/catenaHorseflyReduced.json"</color><color=#89DDFF>;</color>
    <color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>filecatenaHorseflyReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathcatenaHorseflyReduced</color><color=#89DDFF>);</color>

    <color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathcatenaLanternflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/testvectors/catenaLanternflyReduced.json"</color><color=#89DDFF>;</color>
    <color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>filecatenaLanternflyReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathcatenaLanternflyReduced</color><color=#89DDFF>);</color>

    <color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathcatenaMydasflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/testvectors/catenaMydasflyReduced.json"</color><color=#89DDFF>;</color>
    <color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>filecatenaMydasflyReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathcatenaMydasflyReduced</color><color=#89DDFF>);</color>

    <color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathcatenaStoneflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/testvectors/catenaStoneflyReduced.json"</color><color=#89DDFF>;</color>
    <color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>filecatenaStoneflyReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathcatenaStoneflyReduced</color><color=#89DDFF>);</color>

    <color=#82AAFF>@Test</color>
    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testcatenaHorseflyReduced</color><color=#89DDFF>()</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
        <color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initHorsefly</color><color=#89DDFF>();</color>

        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>13</color><color=#89DDFF>);</color>
        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>13</color><color=#89DDFF>);</color>

        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwd</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>salt</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gamma</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aData</color><color=#89DDFF>;</color>
        <color=#BB80B3>int</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>;</color>

        <color=#EEFFFF>String</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>;</color>
        <color=#EEFFFF>String</color> <color=#EEFFFF>expectedResult</color><color=#89DDFF>;</color>

        <color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>filecatenaHorseflyReduced</color><color=#89DDFF>);</color>
        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>

            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>outputLength</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outputLength"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>expectedResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>actualResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>catena</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>,</color> <color=#EEFFFF>salt</color><color=#89DDFF>,</color> <color=#EEFFFF>aData</color><color=#89DDFF>,</color> <color=#EEFFFF>gamma</color><color=#89DDFF>,</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>));</color>
            <color=#EEFFFF>assertEquals</color><color=#89DDFF>(</color><color=#EEFFFF>expectedResult</color><color=#89DDFF>,</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>.</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>());</color>
        <color=#89DDFF>}</color>
    <color=#89DDFF>}</color>

    <color=#82AAFF>@Test</color>
    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testcatenaLanternflyReduced</color><color=#89DDFF>()</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
        <color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initLanternfly</color><color=#89DDFF>();</color>

        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>

        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwd</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>salt</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gamma</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aData</color><color=#89DDFF>;</color>
        <color=#BB80B3>int</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>;</color>

        <color=#EEFFFF>String</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>;</color>
        <color=#EEFFFF>String</color> <color=#EEFFFF>expectedResult</color><color=#89DDFF>;</color>

        <color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>filecatenaLanternflyReduced</color><color=#89DDFF>);</color>
        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>

            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>outputLength</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outputLength"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>expectedResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>actualResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>catena</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>,</color> <color=#EEFFFF>salt</color><color=#89DDFF>,</color> <color=#EEFFFF>aData</color><color=#89DDFF>,</color> <color=#EEFFFF>gamma</color><color=#89DDFF>,</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>));</color>
            <color=#EEFFFF>assertEquals</color><color=#89DDFF>(</color><color=#EEFFFF>expectedResult</color><color=#89DDFF>,</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>.</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>());</color>
        <color=#89DDFF>}</color>
    <color=#89DDFF>}</color>

    <color=#82AAFF>@Test</color>
    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testcatenaMydasflyReduced</color><color=#89DDFF>()</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
        <color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initMydasfly</color><color=#89DDFF>();</color>

        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>

        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwd</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>salt</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gamma</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aData</color><color=#89DDFF>;</color>
        <color=#BB80B3>int</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>;</color>

        <color=#EEFFFF>String</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>;</color>
        <color=#EEFFFF>String</color> <color=#EEFFFF>expectedResult</color><color=#89DDFF>;</color>

        <color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>filecatenaMydasflyReduced</color><color=#89DDFF>);</color>
        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>

            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>outputLength</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outputLength"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>expectedResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>actualResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>catena</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>,</color> <color=#EEFFFF>salt</color><color=#89DDFF>,</color> <color=#EEFFFF>aData</color><color=#89DDFF>,</color> <color=#EEFFFF>gamma</color><color=#89DDFF>,</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>));</color>
            <color=#EEFFFF>assertEquals</color><color=#89DDFF>(</color><color=#EEFFFF>expectedResult</color><color=#89DDFF>,</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>.</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>());</color>
        <color=#89DDFF>}</color>
    <color=#89DDFF>}</color>

    <color=#82AAFF>@Test</color>
    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testcatenaStoneflyReduced</color><color=#89DDFF>()</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
        <color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initStonefly</color><color=#89DDFF>();</color>

        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>

        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwd</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>salt</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gamma</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aData</color><color=#89DDFF>;</color>
        <color=#BB80B3>int</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>;</color>

        <color=#EEFFFF>String</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>;</color>
        <color=#EEFFFF>String</color> <color=#EEFFFF>expectedResult</color><color=#89DDFF>;</color>

        <color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>filecatenaStoneflyReduced</color><color=#89DDFF>);</color>
        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>

            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>outputLength</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outputLength"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>expectedResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>actualResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>catena</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>,</color> <color=#EEFFFF>salt</color><color=#89DDFF>,</color> <color=#EEFFFF>aData</color><color=#89DDFF>,</color> <color=#EEFFFF>gamma</color><color=#89DDFF>,</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>));</color>
            <color=#EEFFFF>assertEquals</color><color=#89DDFF>(</color><color=#EEFFFF>expectedResult</color><color=#89DDFF>,</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>.</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>());</color>
        <color=#89DDFF>}</color>
    <color=#89DDFF>}</color>

    <color=#82AAFF>@Test</color>
    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testcatenaHorseflyFullReduced</color><color=#89DDFF>()</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
        <color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initHorseflyFull</color><color=#89DDFF>();</color>

        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>13</color><color=#89DDFF>);</color>
        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>13</color><color=#89DDFF>);</color>

        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwd</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>salt</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gamma</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aData</color><color=#89DDFF>;</color>
        <color=#BB80B3>int</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>;</color>

        <color=#EEFFFF>String</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>;</color>
        <color=#EEFFFF>String</color> <color=#EEFFFF>expectedResult</color><color=#89DDFF>;</color>

        <color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>filecatenaHorseflyFullReduced</color><color=#89DDFF>);</color>
        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>

            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>outputLength</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outputLength"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>expectedResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>actualResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>catena</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>,</color> <color=#EEFFFF>salt</color><color=#89DDFF>,</color> <color=#EEFFFF>aData</color><color=#89DDFF>,</color> <color=#EEFFFF>gamma</color><color=#89DDFF>,</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>));</color>
            <color=#EEFFFF>assertEquals</color><color=#89DDFF>(</color><color=#EEFFFF>expectedResult</color><color=#89DDFF>,</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>.</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>());</color>
        <color=#89DDFF>}</color>
    <color=#89DDFF>}</color>

    <color=#82AAFF>@Test</color>
    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testcatenaLanternflyFullReduced</color><color=#89DDFF>()</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
        <color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initLanternflyFull</color><color=#89DDFF>();</color>

        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>

        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwd</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>salt</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gamma</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aData</color><color=#89DDFF>;</color>
        <color=#BB80B3>int</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>;</color>

        <color=#EEFFFF>String</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>;</color>
        <color=#EEFFFF>String</color> <color=#EEFFFF>expectedResult</color><color=#89DDFF>;</color>

        <color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>filecatenaLanternflyFullReduced</color><color=#89DDFF>);</color>
        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>

            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>outputLength</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outputLength"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>expectedResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>actualResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>catena</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>,</color> <color=#EEFFFF>salt</color><color=#89DDFF>,</color> <color=#EEFFFF>aData</color><color=#89DDFF>,</color> <color=#EEFFFF>gamma</color><color=#89DDFF>,</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>));</color>
            <color=#EEFFFF>assertEquals</color><color=#89DDFF>(</color><color=#EEFFFF>expectedResult</color><color=#89DDFF>,</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>.</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>());</color>
        <color=#89DDFF>}</color>
    <color=#89DDFF>}</color>

    <color=#82AAFF>@Test</color>
    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testcatenaMydasflyFullReduced</color><color=#89DDFF>()</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
        <color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initMydasflyFull</color><color=#89DDFF>();</color>

        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>

        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwd</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>salt</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gamma</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aData</color><color=#89DDFF>;</color>
        <color=#BB80B3>int</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>;</color>

        <color=#EEFFFF>String</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>;</color>
        <color=#EEFFFF>String</color> <color=#EEFFFF>expectedResult</color><color=#89DDFF>;</color>

        <color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>filecatenaMydasflyFullReduced</color><color=#89DDFF>);</color>
        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>

            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>outputLength</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outputLength"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>expectedResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>actualResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>catena</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>,</color> <color=#EEFFFF>salt</color><color=#89DDFF>,</color> <color=#EEFFFF>aData</color><color=#89DDFF>,</color> <color=#EEFFFF>gamma</color><color=#89DDFF>,</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>));</color>
            <color=#EEFFFF>assertEquals</color><color=#89DDFF>(</color><color=#EEFFFF>expectedResult</color><color=#89DDFF>,</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>.</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>());</color>
        <color=#89DDFF>}</color>
    <color=#89DDFF>}</color>

    <color=#82AAFF>@Test</color>
    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testcatenaStoneflyFullReduced</color><color=#89DDFF>()</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
        <color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initStoneflyFull</color><color=#89DDFF>();</color>

        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>

        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwd</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>salt</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gamma</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aData</color><color=#89DDFF>;</color>
        <color=#BB80B3>int</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>;</color>

        <color=#EEFFFF>String</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>;</color>
        <color=#EEFFFF>String</color> <color=#EEFFFF>expectedResult</color><color=#89DDFF>;</color>

        <color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>filecatenaStoneflyFullReduced</color><color=#89DDFF>);</color>
        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>

            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>outputLength</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outputLength"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>expectedResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>actualResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>catena</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>,</color> <color=#EEFFFF>salt</color><color=#89DDFF>,</color> <color=#EEFFFF>aData</color><color=#89DDFF>,</color> <color=#EEFFFF>gamma</color><color=#89DDFF>,</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>));</color>

            <color=#EEFFFF>assertEquals</color><color=#89DDFF>(</color><color=#EEFFFF>expectedResult</color><color=#89DDFF>,</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>);</color>
        <color=#89DDFF>}</color>
    <color=#89DDFF>}</color>

    <color=#546E7A>// @Test</color>
    <color=#546E7A>// public void testButterfly(){</color>
    <color=#546E7A>// DefaultInstances defaultInstance = new DefaultInstances();</color>
    <color=#546E7A>// Catena c = defaultInstance.initButterfly();</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// byte[] pwd;</color>
    <color=#546E7A>// byte[] salt;</color>
    <color=#546E7A>// byte[] gamma;</color>
    <color=#546E7A>// byte[] aData;</color>
    <color=#546E7A>// int outputLength;</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// String actualResult;</color>
    <color=#546E7A>// String expectedResult;</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// JSONArray jsonObj = helper.jsonParserArr(butterflyFile);</color>
    <color=#546E7A>// for (int i = 0; i<jsonObj.length(); ++i ){</color>
    <color=#546E7A>// JSONObject o = (JSONObject) jsonObj.get(i);</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// JSONObject inputs = o.getJSONObject("inputs");</color>
    <color=#546E7A>// JSONObject outputs = o.getJSONObject("outputs");</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// pwd = helper.hex2bytes(inputs.getString("pwd"));</color>
    <color=#546E7A>// salt = helper.hex2bytes(inputs.getString("salt"));</color>
    <color=#546E7A>// gamma = helper.hex2bytes(inputs.getString("gamma"));</color>
    <color=#546E7A>// aData = helper.hex2bytes(inputs.getString("aData"));</color>
    <color=#546E7A>// outputLength = inputs.getInt("outputLength");</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// expectedResult = outputs.getString("res");</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// actualResult = helper.bytes2hex(c.catena(pwd, salt, aData, gamma,</color>
    <color=#546E7A>// outputLength));</color>
    <color=#546E7A>// assertEquals(expectedResult, actualResult.toLowerCase());</color>
    <color=#546E7A>// }</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// }</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// @Test</color>
    <color=#546E7A>// public void testButterflyFull(){</color>
    <color=#546E7A>// DefaultInstances defaultInstance = new DefaultInstances();</color>
    <color=#546E7A>// Catena c = defaultInstance.initButterflyFull();</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// JSONArray jsonObj = helper.jsonParserArr(butterflyFileFull);</color>
    <color=#546E7A>// for (int i = 0; i<jsonObj.length(); ++i ){</color>
    <color=#546E7A>// JSONObject o = (JSONObject) jsonObj.get(i);</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// JSONObject inputs = o.getJSONObject("inputs");</color>
    <color=#546E7A>// JSONObject outputs = o.getJSONObject("outputs");</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// byte[] pwd = helper.hex2bytes(inputs.getString("pwd"));</color>
    <color=#546E7A>// byte[] salt = helper.hex2bytes(inputs.getString("salt"));</color>
    <color=#546E7A>// byte[] gamma = helper.hex2bytes(inputs.getString("gamma"));</color>
    <color=#546E7A>// byte[] aData = helper.hex2bytes(inputs.getString("aData"));</color>
    <color=#546E7A>// int outputLength = inputs.getInt("outputLength");</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// String expectedResult = outputs.getString("res");</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// String actualResult = helper.bytes2hex(c.catena(pwd, salt, aData, gamma,</color>
    <color=#546E7A>// outputLength));</color>
    <color=#546E7A>// assertEquals(expectedResult, actualResult.toLowerCase());</color>
    <color=#546E7A>// }</color>
    <color=#546E7A>// }</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// @Test</color>
    <color=#546E7A>// public void testDragonfly(){</color>
    <color=#546E7A>// DefaultInstances defaultInstance = new DefaultInstances();</color>
    <color=#546E7A>// Catena c = defaultInstance.initDragonfly();</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// JSONArray jsonObj = helper.jsonParserArr(fileDragonfly);</color>
    <color=#546E7A>// for (int i = 0; i<jsonObj.length(); ++i ){</color>
    <color=#546E7A>// JSONObject o = (JSONObject) jsonObj.get(i);</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// JSONObject inputs = o.getJSONObject("inputs");</color>
    <color=#546E7A>// JSONObject outputs = o.getJSONObject("outputs");</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// byte[] pwd = helper.hex2bytes(inputs.getString("pwd"));</color>
    <color=#546E7A>// byte[] salt = helper.hex2bytes(inputs.getString("salt"));</color>
    <color=#546E7A>// byte[] gammaValue = helper.hex2bytes(inputs.getString("gamma"));</color>
    <color=#546E7A>// byte[] publicInput = helper.hex2bytes(inputs.getString("aData"));</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// int m = inputs.getInt("outputLength");</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// String expectedResult = outputs.getString("res");</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// byte[] actualResult = c.catena(pwd, salt, publicInput, gammaValue, m);</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// assertEquals(expectedResult, helper.bytes2hex(actualResult).toLowerCase());</color>
    <color=#546E7A>// }</color>
    <color=#546E7A>// }</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// @Test</color>
    <color=#546E7A>// public void testDragonflyFull(){</color>
    <color=#546E7A>// DefaultInstances defaultInstance = new DefaultInstances();</color>
    <color=#546E7A>// Catena c = defaultInstance.initDragonflyFull();</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// byte[] pwd;</color>
    <color=#546E7A>// byte[] salt;</color>
    <color=#546E7A>// byte[] publicInput;</color>
    <color=#546E7A>// byte[] gammaValue;</color>
    <color=#546E7A>// int m;</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// byte[] actualResult;</color>
    <color=#546E7A>// String expectedResult;</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// JSONArray jsonObj = helper.jsonParserArr(fileDragonflyFull);</color>
    <color=#546E7A>// for (int i = 0; i<jsonObj.length(); ++i ){</color>
    <color=#546E7A>// JSONObject o = (JSONObject) jsonObj.get(i);</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// JSONObject inputs = o.getJSONObject("inputs");</color>
    <color=#546E7A>// JSONObject outputs = o.getJSONObject("outputs");</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// pwd = helper.hex2bytes(inputs.getString("pwd"));</color>
    <color=#546E7A>// salt = helper.hex2bytes(inputs.getString("salt"));</color>
    <color=#546E7A>// gammaValue = helper.hex2bytes(inputs.getString("gamma"));</color>
    <color=#546E7A>// publicInput = helper.hex2bytes(inputs.getString("aData"));</color>
    <color=#546E7A>// m = inputs.getInt("outputLength");</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// expectedResult = outputs.getString("res");</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// actualResult = c.catena(pwd, salt, publicInput, gammaValue, m);</color>
    <color=#546E7A>//</color>
    <color=#546E7A>// assertEquals(expectedResult, helper.bytes2hex(actualResult).toLowerCase());</color>
    <color=#546E7A>// }</color>
    <color=#546E7A>// }</color>

    <color=#82AAFF>@Test</color>
    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testButterflyReduced</color><color=#89DDFF>()</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
        <color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initButterfly</color><color=#89DDFF>();</color>

        <color=#546E7A>// reduced gHigh</color>
        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>

        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwd</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>salt</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gamma</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aData</color><color=#89DDFF>;</color>
        <color=#BB80B3>int</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>;</color>

        <color=#EEFFFF>String</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>;</color>
        <color=#EEFFFF>String</color> <color=#EEFFFF>expectedResult</color><color=#89DDFF>;</color>

        <color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>butterflyFileReduced</color><color=#89DDFF>);</color>
        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>

            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>outputLength</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outputLength"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>expectedResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>actualResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>catena</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>,</color> <color=#EEFFFF>salt</color><color=#89DDFF>,</color> <color=#EEFFFF>aData</color><color=#89DDFF>,</color> <color=#EEFFFF>gamma</color><color=#89DDFF>,</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>));</color>

            <color=#EEFFFF>assertEquals</color><color=#89DDFF>(</color><color=#EEFFFF>expectedResult</color><color=#89DDFF>,</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>.</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>());</color>
        <color=#89DDFF>}</color>

    <color=#89DDFF>}</color>

    <color=#82AAFF>@Test</color>
    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testButterflyFullReduced</color><color=#89DDFF>()</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
        <color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initButterflyFull</color><color=#89DDFF>();</color>

        <color=#546E7A>// reduced gHigh</color>
        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>

        <color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>butterflyFileFullReduced</color><color=#89DDFF>);</color>
        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>

            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

            <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>));</color>
            <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>));</color>
            <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>));</color>
            <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>));</color>
            <color=#BB80B3>int</color> <color=#EEFFFF>outputLength</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outputLength"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>String</color> <color=#EEFFFF>expectedResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>String</color> <color=#EEFFFF>actualResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>catena</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>,</color> <color=#EEFFFF>salt</color><color=#89DDFF>,</color> <color=#EEFFFF>aData</color><color=#89DDFF>,</color> <color=#EEFFFF>gamma</color><color=#89DDFF>,</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>));</color>
            <color=#EEFFFF>assertEquals</color><color=#89DDFF>(</color><color=#EEFFFF>expectedResult</color><color=#89DDFF>,</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>.</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>());</color>
        <color=#89DDFF>}</color>
    <color=#89DDFF>}</color>

    <color=#82AAFF>@Test</color>
    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testDragonflyReduced</color><color=#89DDFF>()</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
        <color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initDragonfly</color><color=#89DDFF>();</color>

        <color=#546E7A>// reduced gHigh</color>
        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>14</color><color=#89DDFF>);</color>
        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>14</color><color=#89DDFF>);</color>

        <color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileDragonflyReduced</color><color=#89DDFF>);</color>
        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>

            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

            <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>));</color>
            <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>));</color>
            <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gammaValue</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>));</color>
            <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>publicInput</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>));</color>

            <color=#BB80B3>int</color> <color=#EEFFFF>m</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outputLength"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>String</color> <color=#EEFFFF>expectedResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>

            <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>actualResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>catena</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>,</color> <color=#EEFFFF>salt</color><color=#89DDFF>,</color> <color=#EEFFFF>publicInput</color><color=#89DDFF>,</color> <color=#EEFFFF>gammaValue</color><color=#89DDFF>,</color> <color=#EEFFFF>m</color><color=#89DDFF>);</color>

            <color=#EEFFFF>assertEquals</color><color=#89DDFF>(</color><color=#EEFFFF>expectedResult</color><color=#89DDFF>,</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>actualResult</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>());</color>
        <color=#89DDFF>}</color>
    <color=#89DDFF>}</color>

    <color=#82AAFF>@Test</color>
    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testDragonflyFullReduced</color><color=#89DDFF>()</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
        <color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initDragonflyFull</color><color=#89DDFF>();</color>

        <color=#546E7A>// reduced gHigh</color>
        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>14</color><color=#89DDFF>);</color>
        <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>14</color><color=#89DDFF>);</color>

        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwd</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>salt</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>publicInput</color><color=#89DDFF>;</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gammaValue</color><color=#89DDFF>;</color>
        <color=#BB80B3>int</color> <color=#EEFFFF>m</color><color=#89DDFF>;</color>

        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>actualResult</color><color=#89DDFF>;</color>
        <color=#EEFFFF>String</color> <color=#EEFFFF>expectedResult</color><color=#89DDFF>;</color>

        <color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileDragonflyFullReduced</color><color=#89DDFF>);</color>
        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>

            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>gammaValue</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>publicInput</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>m</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outputLength"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>expectedResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>actualResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>catena</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>,</color> <color=#EEFFFF>salt</color><color=#89DDFF>,</color> <color=#EEFFFF>publicInput</color><color=#89DDFF>,</color> <color=#EEFFFF>gammaValue</color><color=#89DDFF>,</color> <color=#EEFFFF>m</color><color=#89DDFF>);</color>

            <color=#EEFFFF>assertEquals</color><color=#89DDFF>(</color><color=#EEFFFF>expectedResult</color><color=#89DDFF>,</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>actualResult</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>());</color>
        <color=#89DDFF>}</color>
    <color=#89DDFF>}</color>
<color=#89DDFF>}</color>