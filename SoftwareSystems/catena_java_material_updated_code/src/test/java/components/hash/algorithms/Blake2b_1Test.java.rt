<color=#89DDFF>package</color> <color=#FFCB6B>test.java.components.hash.algorithms</color><color=#89DDFF>;</color>

<color=#89DDFF>import static</color> <color=#FFCB6B>org.junit.Assert.*</color><color=#89DDFF>;</color>

<color=#89DDFF>import</color> <color=#FFCB6B>java.io.BufferedReader</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>java.io.File</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>java.io.FileReader</color><color=#89DDFF>;</color>

<color=#89DDFF>import</color> <color=#FFCB6B>org.json.JSONArray</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>org.json.JSONObject</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>org.junit.Test</color><color=#89DDFF>;</color>

<color=#89DDFF>import</color> <color=#FFCB6B>main.java.Helper</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>main.java.components.hash.HashInterface</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>main.java.components.hash.algorithms.Blake2b_1</color><color=#89DDFF>;</color>

<color=#BB80B3>public</color> <color=#BB80B3>class</color> <color=#FFCB6B>Blake2b_1Test</color> <color=#89DDFF>{</color>

    <color=#EEFFFF>Helper</color> <color=#EEFFFF>helper</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>Helper</color><color=#89DDFF>();</color>

    <color=#BB80B3>private</color> <color=#BB80B3>static</color> <color=#BB80B3>final</color> <color=#EEFFFF>String</color> <color=#EEFFFF>testVectorSource</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/testvectors/blake2b1.json"</color><color=#89DDFF>;</color>
    <color=#BB80B3>private</color> <color=#BB80B3>static</color> <color=#BB80B3>final</color> <color=#EEFFFF>File</color> <color=#EEFFFF>file</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>testVectorSource</color><color=#89DDFF>);</color>

    <color=#82AAFF>@Test</color>
    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testAllVectors</color><color=#89DDFF>()</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>Helper</color> <color=#EEFFFF>helper</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>Helper</color><color=#89DDFF>();</color>
        <color=#EEFFFF>HashInterface</color> <color=#EEFFFF>hPrime</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>Blake2b_1</color><color=#89DDFF>();</color>

        <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>actualResult</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#BB80B3>byte</color><color=#89DDFF>[</color><color=#F78C6C>64</color><color=#89DDFF>];</color>

        <color=#BB80B3>boolean</color> <color=#EEFFFF>reset</color> <color=#89DDFF>=</color> <color=#89DDFF>false</color><color=#89DDFF>;</color>
        <color=#BB80B3>int</color> <color=#EEFFFF>r</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color>

        <color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>jsonParser</color><color=#89DDFF>(</color><color=#EEFFFF>file</color><color=#89DDFF>);</color>
        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>

            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>reset</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getBoolean</color><color=#89DDFF>(</color><color=#C3E88D>"reset"</color><color=#89DDFF>);</color>
            <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>input</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"data"</color><color=#89DDFF>));</color>
            <color=#EEFFFF>r</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"r"</color><color=#89DDFF>);</color>

            <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>));</color>

            <color=#BB80B3>if</color> <color=#89DDFF>(</color><color=#EEFFFF>reset</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
                <color=#EEFFFF>hPrime</color><color=#89DDFF>.</color><color=#BB80B3>reset</color><color=#89DDFF>();</color>
            <color=#89DDFF>}</color>

            <color=#EEFFFF>hPrime</color><color=#89DDFF>.</color><color=#BB80B3>setVertexIndex</color><color=#89DDFF>(</color><color=#EEFFFF>r</color><color=#89DDFF>);</color>
            <color=#EEFFFF>hPrime</color><color=#89DDFF>.</color><color=#BB80B3>update</color><color=#89DDFF>(</color><color=#EEFFFF>input</color><color=#89DDFF>);</color>
            <color=#EEFFFF>actualResult</color> <color=#89DDFF>=</color> <color=#EEFFFF>hPrime</color><color=#89DDFF>.</color><color=#BB80B3>doFinal</color><color=#89DDFF>();</color>

            <color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>actualResult</color><color=#89DDFF>).</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>)));</color>
        <color=#89DDFF>}</color>
    <color=#89DDFF>}</color>

    <color=#546E7A>// ------------------- Helper Area</color>

    <color=#BB80B3>private</color> <color=#EEFFFF>JSONArray</color> <color=#82AAFF>jsonParser</color><color=#89DDFF>(</color><color=#EEFFFF>File</color> <color=#EEFFFF>f</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>BufferedReader</color> <color=#EEFFFF>br</color><color=#89DDFF>;</color>
        <color=#EEFFFF>String</color> <color=#EEFFFF>all</color> <color=#89DDFF>=</color> <color=#C3E88D>""</color><color=#89DDFF>;</color>
        <color=#BB80B3>try</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>br</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>BufferedReader</color><color=#89DDFF>(</color><color=#BB80B3>new</color> <color=#EEFFFF>FileReader</color><color=#89DDFF>(</color><color=#EEFFFF>f</color><color=#89DDFF>));</color>
            <color=#EEFFFF>String</color> <color=#EEFFFF>line</color><color=#89DDFF>;</color>
            <color=#BB80B3>while</color> <color=#89DDFF>((</color><color=#EEFFFF>line</color> <color=#89DDFF>=</color> <color=#EEFFFF>br</color><color=#89DDFF>.</color><color=#BB80B3>readLine</color><color=#89DDFF>())</color> <color=#89DDFF>!=</color> <color=#89DDFF>null</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
                <color=#EEFFFF>all</color> <color=#89DDFF>+=</color> <color=#EEFFFF>line</color><color=#89DDFF>;</color>
            <color=#89DDFF>}</color>
        <color=#89DDFF>}</color> <color=#BB80B3>catch</color> <color=#89DDFF>(</color><color=#EEFFFF>Exception</color> <color=#EEFFFF>e</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#89DDFF>}</color>
        <color=#BB80B3>return</color> <color=#BB80B3>new</color> <color=#EEFFFF>JSONArray</color><color=#89DDFF>(</color><color=#EEFFFF>all</color><color=#89DDFF>);</color>
    <color=#89DDFF>}</color>
<color=#89DDFF>}</color>