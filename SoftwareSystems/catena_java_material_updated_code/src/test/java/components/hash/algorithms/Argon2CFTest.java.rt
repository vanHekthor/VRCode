<color=#89DDFF>package</color> <color=#FFCB6B>test.java.components.hash.algorithms</color><color=#89DDFF>;</color>

<color=#89DDFF>import static</color> <color=#FFCB6B>org.junit.Assert.assertTrue</color><color=#89DDFF>;</color>

<color=#89DDFF>import</color> <color=#FFCB6B>java.io.File</color><color=#89DDFF>;</color>

<color=#89DDFF>import</color> <color=#FFCB6B>org.json.JSONArray</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>org.json.JSONObject</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>org.junit.Test</color><color=#89DDFF>;</color>

<color=#89DDFF>import</color> <color=#FFCB6B>main.java.Helper</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>main.java.components.hash.HashInterface</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>main.java.components.hash.algorithms.Argon2CF</color><color=#89DDFF>;</color>

<color=#BB80B3>public</color> <color=#BB80B3>class</color> <color=#FFCB6B>Argon2CFTest</color> <color=#89DDFF>{</color>

    <color=#EEFFFF>Helper</color> <color=#EEFFFF>helper</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>Helper</color><color=#89DDFF>();</color>

    <color=#EEFFFF>String</color> <color=#EEFFFF>pathGL</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/testvectors/cfArgon2Gl.json"</color><color=#89DDFF>;</color>
    <color=#EEFFFF>File</color> <color=#EEFFFF>fileGL</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathGL</color><color=#89DDFF>);</color>

    <color=#EEFFFF>String</color> <color=#EEFFFF>pathGB</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/testvectors/cfArgon2Gb.json"</color><color=#89DDFF>;</color>
    <color=#EEFFFF>File</color> <color=#EEFFFF>fileGB</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathGB</color><color=#89DDFF>);</color>

    <color=#82AAFF>@Test</color>
    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testGL</color><color=#89DDFF>()</color> <color=#89DDFF>{</color>

        <color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileGL</color><color=#89DDFF>);</color>
        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>

            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>String</color> <color=#EEFFFF>func</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"mixFunc"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>String</color> <color=#EEFFFF>dataString</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"data"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>

            <color=#BB80B3>boolean</color> <color=#EEFFFF>useGL</color> <color=#89DDFF>=</color> <color=#89DDFF>true</color><color=#89DDFF>;</color>

            <color=#BB80B3>if</color> <color=#89DDFF>(</color><color=#EEFFFF>func</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#C3E88D>"G_{L}"</color><color=#89DDFF>))</color> <color=#89DDFF>{</color>
                <color=#EEFFFF>useGL</color> <color=#89DDFF>=</color> <color=#89DDFF>true</color><color=#89DDFF>;</color>
            <color=#89DDFF>}</color> <color=#BB80B3>else</color> <color=#89DDFF>{</color>
                <color=#EEFFFF>useGL</color> <color=#89DDFF>=</color> <color=#89DDFF>false</color><color=#89DDFF>;</color>
            <color=#89DDFF>}</color>

            <color=#EEFFFF>HashInterface</color> <color=#EEFFFF>h</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>Argon2CF</color><color=#89DDFF>(</color><color=#EEFFFF>useGL</color><color=#89DDFF>);</color>
            <color=#EEFFFF>h</color><color=#89DDFF>.</color><color=#BB80B3>update</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>dataString</color><color=#89DDFF>));</color>
            <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>h</color><color=#89DDFF>.</color><color=#BB80B3>doFinal</color><color=#89DDFF>();</color>

            <color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
        <color=#89DDFF>}</color>
    <color=#89DDFF>}</color>

    <color=#82AAFF>@Test</color>
    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testGB</color><color=#89DDFF>()</color> <color=#89DDFF>{</color>

        <color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileGB</color><color=#89DDFF>);</color>
        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>

            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>String</color> <color=#EEFFFF>func</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"mixFunc"</color><color=#89DDFF>);</color>
            <color=#EEFFFF>String</color> <color=#EEFFFF>dataString</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"data"</color><color=#89DDFF>);</color>

            <color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>

            <color=#BB80B3>boolean</color> <color=#EEFFFF>useGL</color> <color=#89DDFF>=</color> <color=#89DDFF>false</color><color=#89DDFF>;</color>

            <color=#BB80B3>if</color> <color=#89DDFF>(</color><color=#EEFFFF>func</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#C3E88D>"G_{B}"</color><color=#89DDFF>))</color> <color=#89DDFF>{</color>
                <color=#EEFFFF>useGL</color> <color=#89DDFF>=</color> <color=#89DDFF>false</color><color=#89DDFF>;</color>
            <color=#89DDFF>}</color> <color=#BB80B3>else</color> <color=#89DDFF>{</color>
                <color=#EEFFFF>useGL</color> <color=#89DDFF>=</color> <color=#89DDFF>true</color><color=#89DDFF>;</color>
            <color=#89DDFF>}</color>

            <color=#EEFFFF>HashInterface</color> <color=#EEFFFF>h</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>Argon2CF</color><color=#89DDFF>(</color><color=#EEFFFF>useGL</color><color=#89DDFF>);</color>
            <color=#EEFFFF>h</color><color=#89DDFF>.</color><color=#BB80B3>update</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>dataString</color><color=#89DDFF>));</color>
            <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>h</color><color=#89DDFF>.</color><color=#BB80B3>doFinal</color><color=#89DDFF>();</color>

            <color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
        <color=#89DDFF>}</color>
    <color=#89DDFF>}</color>
<color=#89DDFF>}</color>