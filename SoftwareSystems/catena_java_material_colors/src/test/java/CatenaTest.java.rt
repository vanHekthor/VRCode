<color=#89DDFF>package</color> <color=#FFCB6B>test.java</color><color=#89DDFF>;</color>

<color=#89DDFF>import static</color> <color=#FFCB6B>org.junit.Assert.*</color><color=#89DDFF>;</color>

<color=#89DDFF>import</color> <color=#FFCB6B>java.io.File</color><color=#89DDFF>;</color>

<color=#89DDFF>import</color> <color=#FFCB6B>org.json.JSONArray</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>org.json.JSONObject</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>org.junit.Test</color><color=#89DDFF>;</color>

<color=#89DDFF>import</color> <color=#FFCB6B>main.java.Catena</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>main.java.Catena.POWstruct</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>main.java.DefaultInstances</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>main.java.Helper</color><color=#89DDFF>;</color>

<color=#BB80B3>public</color> <color=#BB80B3>class</color> <color=#FFCB6B>CatenaTest</color> <color=#89DDFF>{</color>
	
	<color=#EEFFFF>Helper</color> <color=#EEFFFF>helper</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>Helper</color><color=#89DDFF>();</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathHInit</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/hInitAnyFull.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>fileHInit</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathHInit</color><color=#89DDFF>);</color>
	
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathtweakButterfly</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/tweakButterfly.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>filetweakButterfly</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathtweakButterfly</color><color=#89DDFF>);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathtweakButterflyFull</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/tweakButterflyFull.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>filetweakButterflyFull</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathtweakButterflyFull</color><color=#89DDFF>);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathtweakDragonfly</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/tweakDragonfly.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>filetweakDragonfly</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathtweakDragonfly</color><color=#89DDFF>);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathtweakDragonflyFull</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/tweakDragonflyFull.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>filetweakDragonflyFull</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathtweakDragonflyFull</color><color=#89DDFF>);</color>
	
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathFlapDragonfly</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/flapDragonfly.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>fileFlapDragonfly</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathFlapDragonfly</color><color=#89DDFF>);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathFlapDragonflyFull</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/flapDragonflyFull.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>fileFlapDragonflyFull</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathFlapDragonflyFull</color><color=#89DDFF>);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathFlapButterfly</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/flapButterfly.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>fileFlapButterfly</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathFlapButterfly</color><color=#89DDFF>);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathFlapButterflyFull</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/flapButterflyFull.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>fileFlapButterflyFull</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathFlapButterflyFull</color><color=#89DDFF>);</color>
	
	
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathciUpdateDragonflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/ciUpdateDragonflyReduced.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>fileciUpdateDragonflyReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathciUpdateDragonflyReduced</color><color=#89DDFF>);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathciUpdateKeyedDragonflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/ciUpdateKeyedDragonflyReduced.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>fileciUpdateKeyedDragonflyReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathciUpdateKeyedDragonflyReduced</color><color=#89DDFF>);</color>
	
<color=#546E7A>//	private String pathkeyDerivationButterfly = "src/test/resources/keyDerivationButterfly.json";</color>
<color=#546E7A>//	private File filekeyDerivationButterfly = new File(pathkeyDerivationButterfly);</color>
<color=#546E7A>//</color>
<color=#546E7A>//	private String pathkeyDerivationButterflyFull = "src/test/resources/keyDerivationButterflyFull.json";</color>
<color=#546E7A>//	private File filekeyDerivationButterflyFull = new File(pathkeyDerivationButterflyFull);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathkeyDerivationButterflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/keyDerivationButterflyReduced.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>filekeyDerivationButterflyReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathkeyDerivationButterflyReduced</color><color=#89DDFF>);</color>
	
<color=#546E7A>//	private String pathkeyDerivationDragonfly = "src/test/resources/keyDerivationDragonfly.json";</color>
<color=#546E7A>//	private File filekeyDerivationDragonfly = new File(pathkeyDerivationDragonfly);</color>
<color=#546E7A>//	</color>
<color=#546E7A>//	private String pathkeyDerivationDragonflyFull = "src/test/resources/keyDerivationDragonflyFull.json";</color>
<color=#546E7A>//	private File filekeyDerivationDragonflyFull = new File(pathkeyDerivationDragonflyFull);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathkeyDerivationDragonflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/keyDerivationDragonflyReduced.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>filekeyDerivationDragonflyReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathkeyDerivationDragonflyReduced</color><color=#89DDFF>);</color>
	
<color=#546E7A>//	private String pathkeyedHashButterfly = "src/test/resources/keyedHashButterfly.json";</color>
<color=#546E7A>//	private File filekeyedHashButterfly = new File(pathkeyedHashButterfly);</color>
<color=#546E7A>//	</color>
<color=#546E7A>//	private String pathkeyedHashButterflyFull = "src/test/resources/keyedHashButterflyFull.json";</color>
<color=#546E7A>//	private File filekeyedHashButterflyFull = new File(pathkeyedHashButterflyFull);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathkeyedHashButterflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/keyedHashButterflyReduced.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>filekeyedHashButterflyReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathkeyedHashButterflyReduced</color><color=#89DDFF>);</color>
	
<color=#546E7A>//	private String pathkeyedHashDragonfly = "src/test/resources/keyedHashDragonfly.json";</color>
<color=#546E7A>//	private File filekeyedHashDragonfly = new File(pathkeyedHashDragonfly);</color>
<color=#546E7A>//	</color>
<color=#546E7A>//	private String pathkeyedHashDragonflyFull = "src/test/resources/keyedHashDragonflyFull.json";</color>
<color=#546E7A>//	private File filekeyedHashDragonflyFull = new File(pathkeyedHashDragonflyFull);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathkeyedHashDragonflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/keyedHashDragonflyReduced.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>filekeyedHashDragonflyReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathkeyedHashDragonflyReduced</color><color=#89DDFF>);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathserverReliefClientButterflyReducedDifferentG</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/serverReliefClientButterflyReducedDifferentG.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>fileserverReliefClientButterflyReducedDifferentG</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathserverReliefClientButterflyReducedDifferentG</color><color=#89DDFF>);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathserverReliefClientButterflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/serverReliefClientButterflyReduced.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>fileserverReliefClientButterflyReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathserverReliefClientButterflyReduced</color><color=#89DDFF>);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathserverReliefClientDragonflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/serverReliefClientDragonflyReduced.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>fileserverReliefClientDragonflyReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathserverReliefClientDragonflyReduced</color><color=#89DDFF>);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathserverReliefServerButterflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/serverReliefServerButterflyReduced.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>fileserverReliefServerButterflyReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathserverReliefServerButterflyReduced</color><color=#89DDFF>);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathserverReliefServerDragonflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/serverReliefServerDragonflyReduced.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>fileserverReliefServerDragonflyReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathserverReliefServerDragonflyReduced</color><color=#89DDFF>);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathproofOfWorkServerSaltButterflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/proofOfWorkServerSaltButterflyReduced.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>fileproofOfWorkServerSaltButterflyReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathproofOfWorkServerSaltButterflyReduced</color><color=#89DDFF>);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathproofOfWorkServerPwdButterflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/proofOfWorkServerPwdButterflyReduced.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>fileproofOfWorkServerPwdButterflyReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathproofOfWorkServerPwdButterflyReduced</color><color=#89DDFF>);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathproofOfWorkClientPwdButterflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/proofOfWorkClientPwdButterflyReduced.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>fileproofOfWorkClientPwdButterflyReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathproofOfWorkClientPwdButterflyReduced</color><color=#89DDFF>);</color>
	
	<color=#BB80B3>private</color> <color=#EEFFFF>String</color> <color=#EEFFFF>pathproofOfWorkClientSaltButterflyReduced</color> <color=#89DDFF>=</color> <color=#C3E88D>"src/test/resources/proofOfWorkClientSaltButterflyReduced.json"</color><color=#89DDFF>;</color>
	<color=#BB80B3>private</color> <color=#EEFFFF>File</color> <color=#EEFFFF>fileproofOfWorkClientSaltButterflyReduced</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>File</color><color=#89DDFF>(</color><color=#EEFFFF>pathproofOfWorkClientSaltButterflyReduced</color><color=#89DDFF>);</color>
	
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testServerReliefServerButterflyReduced</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>instance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>instance</color><color=#89DDFF>.</color><color=#BB80B3>initButterfly</color><color=#89DDFF>();</color>
		
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
		
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileserverReliefServerButterflyReduced</color><color=#89DDFF>);</color>
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>hash</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"hash"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outputLength</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outputLength"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>hashArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>hash</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>serverReliefServer</color><color=#89DDFF>(</color><color=#EEFFFF>outputLength</color><color=#89DDFF>,</color> <color=#EEFFFF>hashArr</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertEquals</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>,</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>());</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testServerReliefServerDragonflyReduced</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>instance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>instance</color><color=#89DDFF>.</color><color=#BB80B3>initDragonfly</color><color=#89DDFF>();</color>
		
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>14</color><color=#89DDFF>);</color>
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>14</color><color=#89DDFF>);</color>
		
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileserverReliefServerDragonflyReduced</color><color=#89DDFF>);</color>
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>hash</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"hash"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outputLength</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outputLength"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>hashArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>hash</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>serverReliefServer</color><color=#89DDFF>(</color><color=#EEFFFF>outputLength</color><color=#89DDFF>,</color> <color=#EEFFFF>hashArr</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testServerReliefClientButterflyReduceddifferentG</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>instance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>instance</color><color=#89DDFF>.</color><color=#BB80B3>initButterfly</color><color=#89DDFF>();</color>
		
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileserverReliefClientButterflyReducedDifferentG</color><color=#89DDFF>);</color>
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>ad</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outputLength</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outputLength"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>gLow</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"gLow"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>gHigh</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"gHigh"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwdArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>saltArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>salt</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gammaArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>gamma</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>adArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>ad</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#EEFFFF>gLow</color><color=#89DDFF>);</color>
			<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#EEFFFF>gHigh</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>serverReliefClient</color><color=#89DDFF>(</color><color=#EEFFFF>pwdArr</color><color=#89DDFF>,</color> <color=#EEFFFF>saltArr</color><color=#89DDFF>,</color> <color=#EEFFFF>adArr</color><color=#89DDFF>,</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>,</color> <color=#EEFFFF>gammaArr</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testServerReliefClientButterflyReduced</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>instance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>instance</color><color=#89DDFF>.</color><color=#BB80B3>initButterfly</color><color=#89DDFF>();</color>
		
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
		
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileserverReliefClientButterflyReduced</color><color=#89DDFF>);</color>
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>ad</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outputLength</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outputLength"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwdArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>saltArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>salt</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gammaArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>gamma</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>adArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>ad</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>serverReliefClient</color><color=#89DDFF>(</color><color=#EEFFFF>pwdArr</color><color=#89DDFF>,</color> <color=#EEFFFF>saltArr</color><color=#89DDFF>,</color> <color=#EEFFFF>adArr</color><color=#89DDFF>,</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>,</color> <color=#EEFFFF>gammaArr</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testServerReliefClientDragonflyReduced</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>instance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>instance</color><color=#89DDFF>.</color><color=#BB80B3>initDragonfly</color><color=#89DDFF>();</color>
		
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>14</color><color=#89DDFF>);</color>
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>14</color><color=#89DDFF>);</color>
		
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileserverReliefClientDragonflyReduced</color><color=#89DDFF>);</color>
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>ad</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outputLength</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outputLength"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwdArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>saltArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>salt</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gammaArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>gamma</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>adArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>ad</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>serverReliefClient</color><color=#89DDFF>(</color><color=#EEFFFF>pwdArr</color><color=#89DDFF>,</color> <color=#EEFFFF>saltArr</color><color=#89DDFF>,</color> <color=#EEFFFF>adArr</color><color=#89DDFF>,</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>,</color> <color=#EEFFFF>gammaArr</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	

<color=#546E7A>//	@Test</color>
<color=#546E7A>//	public void testKeyedHashButterfly(){</color>
<color=#546E7A>//		DefaultInstances instance = new DefaultInstances();</color>
<color=#546E7A>//		Catena c = instance.initButterfly();</color>
<color=#546E7A>//		</color>
<color=#546E7A>//		JSONArray jsonObj = helper.jsonParserArr(filekeyedHashButterfly);</color>
<color=#546E7A>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#546E7A>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#546E7A>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			String pwd = inputs.getString("pwd");</color>
<color=#546E7A>//			String key = inputs.getString("key");</color>
<color=#546E7A>//			String salt = inputs.getString("salt");</color>
<color=#546E7A>//			String gamma = inputs.getString("gamma");</color>
<color=#546E7A>//			String ad = inputs.getString("aData");</color>
<color=#546E7A>//			int outputLength = inputs.getInt("outputLength");</color>
<color=#546E7A>//			String userID = inputs.getString("userID");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			byte[] pwdArr = helper.hex2bytes(pwd);</color>
<color=#546E7A>//			byte[] keyArr = helper.hex2bytes(key);</color>
<color=#546E7A>//			byte[] saltArr = helper.hex2bytes(salt);</color>
<color=#546E7A>//			byte[] gammaArr = helper.hex2bytes(gamma);</color>
<color=#546E7A>//			byte[] adArr = helper.hex2bytes(ad);</color>
<color=#546E7A>//			byte[] userIDArr = helper.hex2bytes(userID);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			String res = outputs.getString("res");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			byte[] output = c.keyedPasswordHashing(pwdArr, keyArr, saltArr, gammaArr, adArr, outputLength, userIDArr);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			assertTrue(res.equals(helper.bytes2hex(output).toLowerCase()));</color>
<color=#546E7A>//		}</color>
<color=#546E7A>//	}</color>

	
<color=#546E7A>//	@Test</color>
<color=#546E7A>//	public void testKeyedHashButterflyFull(){</color>
<color=#546E7A>//		DefaultInstances instance = new DefaultInstances();</color>
<color=#546E7A>//		Catena c = instance.initButterflyFull();</color>
<color=#546E7A>//		</color>
<color=#546E7A>//		JSONArray jsonObj = helper.jsonParserArr(filekeyedHashButterflyFull);</color>
<color=#546E7A>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#546E7A>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#546E7A>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			String pwd = inputs.getString("pwd");</color>
<color=#546E7A>//			String key = inputs.getString("key");</color>
<color=#546E7A>//			String salt = inputs.getString("salt");</color>
<color=#546E7A>//			String gamma = inputs.getString("gamma");</color>
<color=#546E7A>//			String ad = inputs.getString("aData");</color>
<color=#546E7A>//			int outputLength = inputs.getInt("outputLength");</color>
<color=#546E7A>//			String userID = inputs.getString("userID");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			byte[] pwdArr = helper.hex2bytes(pwd);</color>
<color=#546E7A>//			byte[] keyArr = helper.hex2bytes(key);</color>
<color=#546E7A>//			byte[] saltArr = helper.hex2bytes(salt);</color>
<color=#546E7A>//			byte[] gammaArr = helper.hex2bytes(gamma);</color>
<color=#546E7A>//			byte[] adArr = helper.hex2bytes(ad);</color>
<color=#546E7A>//			byte[] userIDArr = helper.hex2bytes(userID);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			String res = outputs.getString("res");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			byte[] output = c.keyedPasswordHashing(pwdArr, keyArr, saltArr, gammaArr, adArr, outputLength, userIDArr);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			assertTrue(res.equals(helper.bytes2hex(output).toLowerCase()));</color>
<color=#546E7A>//		}</color>
<color=#546E7A>//	}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testKeyedHashButterflyReduced</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>instance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>instance</color><color=#89DDFF>.</color><color=#BB80B3>initButterfly</color><color=#89DDFF>();</color>
		
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
		
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>filekeyedHashButterflyReduced</color><color=#89DDFF>);</color>
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>key</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"key"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>ad</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outputLength</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outputLength"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>userID</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"userID"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwdArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>keyArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>key</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>saltArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>salt</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gammaArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>gamma</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>adArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>ad</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>userIDArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>userID</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>keyedPasswordHashing</color><color=#89DDFF>(</color><color=#EEFFFF>pwdArr</color><color=#89DDFF>,</color> <color=#EEFFFF>keyArr</color><color=#89DDFF>,</color> <color=#EEFFFF>saltArr</color><color=#89DDFF>,</color> <color=#EEFFFF>gammaArr</color><color=#89DDFF>,</color> <color=#EEFFFF>adArr</color><color=#89DDFF>,</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>,</color> <color=#EEFFFF>userIDArr</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
<color=#546E7A>//	@Test</color>
<color=#546E7A>//	public void testKeyedHashDragonfly(){</color>
<color=#546E7A>//		DefaultInstances instance = new DefaultInstances();</color>
<color=#546E7A>//		Catena c = instance.initDragonfly();</color>
<color=#546E7A>//		</color>
<color=#546E7A>//		JSONArray jsonObj = helper.jsonParserArr(filekeyedHashDragonfly);</color>
<color=#546E7A>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#546E7A>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#546E7A>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			String pwd = inputs.getString("pwd");</color>
<color=#546E7A>//			String key = inputs.getString("key");</color>
<color=#546E7A>//			String salt = inputs.getString("salt");</color>
<color=#546E7A>//			String gamma = inputs.getString("gamma");</color>
<color=#546E7A>//			String ad = inputs.getString("aData");</color>
<color=#546E7A>//			int outputLength = inputs.getInt("outputLength");</color>
<color=#546E7A>//			String userID = inputs.getString("userID");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			byte[] pwdArr = helper.hex2bytes(pwd);</color>
<color=#546E7A>//			byte[] keyArr = helper.hex2bytes(key);</color>
<color=#546E7A>//			byte[] saltArr = helper.hex2bytes(salt);</color>
<color=#546E7A>//			byte[] gammaArr = helper.hex2bytes(gamma);</color>
<color=#546E7A>//			byte[] adArr = helper.hex2bytes(ad);</color>
<color=#546E7A>//			byte[] userIDArr = helper.hex2bytes(userID);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			String res = outputs.getString("res");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			byte[] output = c.keyedPasswordHashing(pwdArr, keyArr, saltArr, gammaArr, adArr, outputLength, userIDArr);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			assertTrue(res.equals(helper.bytes2hex(output).toLowerCase()));</color>
<color=#546E7A>//		}</color>
<color=#546E7A>//	}</color>
	
<color=#546E7A>//	@Test</color>
<color=#546E7A>//	public void testKeyedHashDragonflyFull(){</color>
<color=#546E7A>//		DefaultInstances instance = new DefaultInstances();</color>
<color=#546E7A>//		Catena c = instance.initDragonflyFull();</color>
<color=#546E7A>//		</color>
<color=#546E7A>//		JSONArray jsonObj = helper.jsonParserArr(filekeyedHashDragonflyFull);</color>
<color=#546E7A>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#546E7A>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#546E7A>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			String pwd = inputs.getString("pwd");</color>
<color=#546E7A>//			String key = inputs.getString("key");</color>
<color=#546E7A>//			String salt = inputs.getString("salt");</color>
<color=#546E7A>//			String gamma = inputs.getString("gamma");</color>
<color=#546E7A>//			String ad = inputs.getString("aData");</color>
<color=#546E7A>//			int outputLength = inputs.getInt("outputLength");</color>
<color=#546E7A>//			String userID = inputs.getString("userID");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			byte[] pwdArr = helper.hex2bytes(pwd);</color>
<color=#546E7A>//			byte[] keyArr = helper.hex2bytes(key);</color>
<color=#546E7A>//			byte[] saltArr = helper.hex2bytes(salt);</color>
<color=#546E7A>//			byte[] gammaArr = helper.hex2bytes(gamma);</color>
<color=#546E7A>//			byte[] adArr = helper.hex2bytes(ad);</color>
<color=#546E7A>//			byte[] userIDArr = helper.hex2bytes(userID);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			String res = outputs.getString("res");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			byte[] output = c.keyedPasswordHashing(pwdArr, keyArr, saltArr, gammaArr, adArr, outputLength, userIDArr);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			assertTrue(res.equals(helper.bytes2hex(output).toLowerCase()));</color>
<color=#546E7A>//		}</color>
<color=#546E7A>//	}</color>

	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testKeyedHashDragonflyReduced</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>instance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>instance</color><color=#89DDFF>.</color><color=#BB80B3>initDragonfly</color><color=#89DDFF>();</color>
		
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>14</color><color=#89DDFF>);</color>
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>14</color><color=#89DDFF>);</color>
		
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>filekeyedHashDragonflyReduced</color><color=#89DDFF>);</color>
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>key</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"key"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>ad</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outputLength</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outputLength"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>userID</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"userID"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwdArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>keyArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>key</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>saltArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>salt</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gammaArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>gamma</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>adArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>ad</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>userIDArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>userID</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>keyedPasswordHashing</color><color=#89DDFF>(</color><color=#EEFFFF>pwdArr</color><color=#89DDFF>,</color> <color=#EEFFFF>keyArr</color><color=#89DDFF>,</color> <color=#EEFFFF>saltArr</color><color=#89DDFF>,</color> <color=#EEFFFF>gammaArr</color><color=#89DDFF>,</color> <color=#EEFFFF>adArr</color><color=#89DDFF>,</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>,</color> <color=#EEFFFF>userIDArr</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	

<color=#546E7A>//	@Test</color>
<color=#546E7A>//	public void testKeyDerivationButterfly(){</color>
<color=#546E7A>//		DefaultInstances instance = new DefaultInstances();</color>
<color=#546E7A>//		Catena c = instance.initButterfly();</color>
<color=#546E7A>//		</color>
<color=#546E7A>//		JSONArray jsonObj = helper.jsonParserArr(filekeyDerivationButterfly);</color>
<color=#546E7A>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#546E7A>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#546E7A>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			String pwd = inputs.getString("pwd");</color>
<color=#546E7A>//			String ad = inputs.getString("ad");</color>
<color=#546E7A>//			String salt = inputs.getString("salt");</color>
<color=#546E7A>//			String gamma = inputs.getString("gamma");</color>
<color=#546E7A>//			String keyIdentifier = inputs.getString("key_identifier");</color>
<color=#546E7A>//			int outputLength = inputs.getInt("output_length");</color>
<color=#546E7A>//			int keySize = inputs.getInt("key_size");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			byte[] pwdArr = helper.hex2bytes(pwd);</color>
<color=#546E7A>//			byte[] adArr = helper.hex2bytes(ad);</color>
<color=#546E7A>//			byte[] saltArr = helper.hex2bytes(salt);</color>
<color=#546E7A>//			byte[] gammaArr = helper.hex2bytes(gamma);</color>
<color=#546E7A>//			byte[] keyIdentifierArr = helper.hex2bytes(keyIdentifier);</color>
<color=#546E7A>//</color>
<color=#546E7A>//			String res = outputs.getString("res");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			byte[] output = c.keyDerivation(pwdArr, saltArr, adArr, gammaArr, outputLength, keySize, keyIdentifierArr);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			assertTrue(res.equals(helper.bytes2hex(output).toLowerCase()));</color>
<color=#546E7A>//		}</color>
<color=#546E7A>//	}</color>
<color=#546E7A>//	</color>


<color=#546E7A>//	@Test</color>
<color=#546E7A>//	public void testKeyDerivationButterflyFull(){</color>
<color=#546E7A>//		DefaultInstances instance = new DefaultInstances();</color>
<color=#546E7A>//		Catena c = instance.initButterflyFull();</color>
<color=#546E7A>//		</color>
<color=#546E7A>//		JSONArray jsonObj = helper.jsonParserArr(filekeyDerivationButterflyFull);</color>
<color=#546E7A>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#546E7A>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#546E7A>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			String pwd = inputs.getString("pwd");</color>
<color=#546E7A>//			String ad = inputs.getString("ad");</color>
<color=#546E7A>//			String salt = inputs.getString("salt");</color>
<color=#546E7A>//			String gamma = inputs.getString("gamma");</color>
<color=#546E7A>//			String keyIdentifier = inputs.getString("key_identifier");</color>
<color=#546E7A>//			int outputLength = inputs.getInt("output_length");</color>
<color=#546E7A>//			int keySize = inputs.getInt("key_size");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			byte[] pwdArr = helper.hex2bytes(pwd);</color>
<color=#546E7A>//			byte[] adArr = helper.hex2bytes(ad);</color>
<color=#546E7A>//			byte[] saltArr = helper.hex2bytes(salt);</color>
<color=#546E7A>//			byte[] gammaArr = helper.hex2bytes(gamma);</color>
<color=#546E7A>//			byte[] keyIdentifierArr = helper.hex2bytes(keyIdentifier);</color>
<color=#546E7A>//</color>
<color=#546E7A>//			String res = outputs.getString("res");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			byte[] output = c.keyDerivation(pwdArr, saltArr, adArr, gammaArr, outputLength, keySize, keyIdentifierArr);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			assertTrue(res.equals(helper.bytes2hex(output).toLowerCase()));</color>
<color=#546E7A>//		}</color>
<color=#546E7A>//	}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testKeyDerivationButterflyReduced</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>instance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>instance</color><color=#89DDFF>.</color><color=#BB80B3>initButterfly</color><color=#89DDFF>();</color>
		
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
		
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>filekeyDerivationButterflyReduced</color><color=#89DDFF>);</color>
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>ad</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"ad"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>keyIdentifier</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"key_identifier"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outputLength</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"output_length"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>keySize</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"key_size"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwdArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>adArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>ad</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>saltArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>salt</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gammaArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>gamma</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>keyIdentifierArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>keyIdentifier</color><color=#89DDFF>);</color>

			<color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>keyDerivation</color><color=#89DDFF>(</color><color=#EEFFFF>pwdArr</color><color=#89DDFF>,</color> <color=#EEFFFF>saltArr</color><color=#89DDFF>,</color> <color=#EEFFFF>adArr</color><color=#89DDFF>,</color> <color=#EEFFFF>gammaArr</color><color=#89DDFF>,</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>,</color> <color=#EEFFFF>keySize</color><color=#89DDFF>,</color> <color=#EEFFFF>keyIdentifierArr</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
	
<color=#546E7A>//	@Test</color>
<color=#546E7A>//	public void testKeyDerivationDragonfly(){</color>
<color=#546E7A>//		DefaultInstances instance = new DefaultInstances();</color>
<color=#546E7A>//		Catena c = instance.initDragonfly();</color>
<color=#546E7A>//		</color>
<color=#546E7A>//		JSONArray jsonObj = helper.jsonParserArr(filekeyDerivationDragonfly);</color>
<color=#546E7A>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#546E7A>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#546E7A>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			String pwd = inputs.getString("pwd");</color>
<color=#546E7A>//			String ad = inputs.getString("ad");</color>
<color=#546E7A>//			String salt = inputs.getString("salt");</color>
<color=#546E7A>//			String gamma = inputs.getString("gamma");</color>
<color=#546E7A>//			String keyIdentifier = inputs.getString("key_identifier");</color>
<color=#546E7A>//			int outputLength = inputs.getInt("output_length");</color>
<color=#546E7A>//			int keySize = inputs.getInt("key_size");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			byte[] pwdArr = helper.hex2bytes(pwd);</color>
<color=#546E7A>//			byte[] adArr = helper.hex2bytes(ad);</color>
<color=#546E7A>//			byte[] saltArr = helper.hex2bytes(salt);</color>
<color=#546E7A>//			byte[] gammaArr = helper.hex2bytes(gamma);</color>
<color=#546E7A>//			byte[] keyIdentifierArr = helper.hex2bytes(keyIdentifier);</color>
<color=#546E7A>//</color>
<color=#546E7A>//			String res = outputs.getString("res");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			byte[] output = c.keyDerivation(pwdArr, saltArr, adArr, gammaArr, outputLength, keySize, keyIdentifierArr);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			assertTrue(res.equals(helper.bytes2hex(output).toLowerCase()));</color>
<color=#546E7A>//		}</color>
<color=#546E7A>//	}</color>
<color=#546E7A>//	</color>
<color=#546E7A>//	@Test</color>
<color=#546E7A>//	public void testKeyDerivationDragonflyFull(){</color>
<color=#546E7A>//		DefaultInstances instance = new DefaultInstances();</color>
<color=#546E7A>//		Catena c = instance.initDragonflyFull();</color>
<color=#546E7A>//		</color>
<color=#546E7A>//		JSONArray jsonObj = helper.jsonParserArr(filekeyDerivationDragonflyFull);</color>
<color=#546E7A>//		for (int i = 0; i<jsonObj.length(); ++i ){</color>
<color=#546E7A>//			JSONObject o = (JSONObject) jsonObj.get(i);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			JSONObject inputs = o.getJSONObject("inputs");</color>
<color=#546E7A>//			JSONObject outputs = o.getJSONObject("outputs");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			String pwd = inputs.getString("pwd");</color>
<color=#546E7A>//			String ad = inputs.getString("ad");</color>
<color=#546E7A>//			String salt = inputs.getString("salt");</color>
<color=#546E7A>//			String gamma = inputs.getString("gamma");</color>
<color=#546E7A>//			String keyIdentifier = inputs.getString("key_identifier");</color>
<color=#546E7A>//			int outputLength = inputs.getInt("output_length");</color>
<color=#546E7A>//			int keySize = inputs.getInt("key_size");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			byte[] pwdArr = helper.hex2bytes(pwd);</color>
<color=#546E7A>//			byte[] adArr = helper.hex2bytes(ad);</color>
<color=#546E7A>//			byte[] saltArr = helper.hex2bytes(salt);</color>
<color=#546E7A>//			byte[] gammaArr = helper.hex2bytes(gamma);</color>
<color=#546E7A>//			byte[] keyIdentifierArr = helper.hex2bytes(keyIdentifier);</color>
<color=#546E7A>//</color>
<color=#546E7A>//			String res = outputs.getString("res");</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			byte[] output = c.keyDerivation(pwdArr, saltArr, adArr, gammaArr, outputLength, keySize, keyIdentifierArr);</color>
<color=#546E7A>//			</color>
<color=#546E7A>//			assertTrue(res.equals(helper.bytes2hex(output).toLowerCase()));</color>
<color=#546E7A>//		}</color>
<color=#546E7A>//	}</color>

	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testKeyDerivationDragonflyReduced</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>instance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>instance</color><color=#89DDFF>.</color><color=#BB80B3>initDragonfly</color><color=#89DDFF>();</color>
		
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>14</color><color=#89DDFF>);</color>
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>14</color><color=#89DDFF>);</color>
		
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>filekeyDerivationDragonflyReduced</color><color=#89DDFF>);</color>
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>ad</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"ad"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>keyIdentifier</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"key_identifier"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outputLength</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"output_length"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>keySize</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"key_size"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwdArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>adArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>ad</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>saltArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>salt</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gammaArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>gamma</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>keyIdentifierArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>keyIdentifier</color><color=#89DDFF>);</color>

			<color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>keyDerivation</color><color=#89DDFF>(</color><color=#EEFFFF>pwdArr</color><color=#89DDFF>,</color> <color=#EEFFFF>saltArr</color><color=#89DDFF>,</color> <color=#EEFFFF>adArr</color><color=#89DDFF>,</color> <color=#EEFFFF>gammaArr</color><color=#89DDFF>,</color> <color=#EEFFFF>outputLength</color><color=#89DDFF>,</color> <color=#EEFFFF>keySize</color><color=#89DDFF>,</color> <color=#EEFFFF>keyIdentifierArr</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testCIUpdateDragonflyReduced</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>instance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>instance</color><color=#89DDFF>.</color><color=#BB80B3>initDragonfly</color><color=#89DDFF>();</color>
		
		<color=#BB80B3>int</color> <color=#EEFFFF>gOld</color> <color=#89DDFF>=</color> <color=#F78C6C>14</color><color=#89DDFF>;</color>
		
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#EEFFFF>gOld</color><color=#89DDFF>);</color>
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#EEFFFF>gOld</color><color=#89DDFF>);</color>
		
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileciUpdateDragonflyReduced</color><color=#89DDFF>);</color>
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>oldHash</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"oldHash"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>gNew</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"gNew"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outLen</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outLen"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>oldHashArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>oldHash</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gammaArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>gamma</color><color=#89DDFF>);</color>

			<color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#BB80B3>byte</color><color=#89DDFF>[</color><color=#F78C6C>0</color><color=#89DDFF>]</color><color=#89DDFF>;</color>
			<color=#BB80B3>try</color> <color=#89DDFF>{</color>
				<color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>clientIndependentUpdate</color><color=#89DDFF>(</color><color=#EEFFFF>oldHashArr</color><color=#89DDFF>,</color> <color=#EEFFFF>gOld</color><color=#89DDFF>,</color> <color=#EEFFFF>gNew</color><color=#89DDFF>,</color> <color=#EEFFFF>gammaArr</color><color=#89DDFF>,</color> <color=#EEFFFF>outLen</color><color=#89DDFF>);</color>
			<color=#89DDFF>}</color> <color=#BB80B3>catch</color> <color=#89DDFF>(</color><color=#EEFFFF>Exception</color> <color=#EEFFFF>e</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
				<color=#EEFFFF>System</color><color=#89DDFF>.</color><color=#BB80B3>out</color><color=#89DDFF>.</color><color=#BB80B3>println</color><color=#89DDFF>(</color><color=#C3E88D>"Could not update Hash."</color><color=#89DDFF>);</color>
				<color=#EEFFFF>e</color><color=#89DDFF>.</color><color=#BB80B3>printStackTrace</color><color=#89DDFF>();</color>
			<color=#89DDFF>}</color>
			
			<color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testCIUpdateKeyedDragonflyReduced</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>instance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>instance</color><color=#89DDFF>.</color><color=#BB80B3>initDragonfly</color><color=#89DDFF>();</color>
		
		<color=#BB80B3>int</color> <color=#EEFFFF>gOld</color> <color=#89DDFF>=</color> <color=#F78C6C>14</color><color=#89DDFF>;</color>
		
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#EEFFFF>gOld</color><color=#89DDFF>);</color>
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#EEFFFF>gOld</color><color=#89DDFF>);</color>
		
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileciUpdateKeyedDragonflyReduced</color><color=#89DDFF>);</color>
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>oldHash</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"oldHash"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>gNew</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"gNew"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outLen</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outLen"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>key</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"key"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>userID</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"userID"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>oldHashArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>oldHash</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gammaArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>gamma</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>keyArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>key</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>userIDArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>userID</color><color=#89DDFF>);</color>

			<color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#BB80B3>byte</color><color=#89DDFF>[</color><color=#F78C6C>0</color><color=#89DDFF>]</color><color=#89DDFF>;</color>
			<color=#BB80B3>try</color> <color=#89DDFF>{</color>
				<color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>keyedClientIndependentUpdate</color><color=#89DDFF>(</color><color=#EEFFFF>oldHashArr</color><color=#89DDFF>,</color> <color=#EEFFFF>gOld</color><color=#89DDFF>,</color> <color=#EEFFFF>gNew</color><color=#89DDFF>,</color> <color=#EEFFFF>gammaArr</color><color=#89DDFF>,</color> <color=#EEFFFF>outLen</color><color=#89DDFF>,</color> <color=#EEFFFF>keyArr</color><color=#89DDFF>,</color> <color=#EEFFFF>userIDArr</color><color=#89DDFF>);</color>
			<color=#89DDFF>}</color> <color=#BB80B3>catch</color> <color=#89DDFF>(</color><color=#EEFFFF>Exception</color> <color=#EEFFFF>e</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
				<color=#EEFFFF>System</color><color=#89DDFF>.</color><color=#BB80B3>out</color><color=#89DDFF>.</color><color=#BB80B3>println</color><color=#89DDFF>(</color><color=#C3E88D>"Could not update Hash."</color><color=#89DDFF>);</color>
				<color=#EEFFFF>e</color><color=#89DDFF>.</color><color=#BB80B3>printStackTrace</color><color=#89DDFF>();</color>
			<color=#89DDFF>}</color>
			
			<color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testFlapButterfly</color><color=#89DDFF>(){</color>
		
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initButterfly</color><color=#89DDFF>();</color>
	
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileFlapButterfly</color><color=#89DDFF>);</color>
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>int</color> <color=#EEFFFF>g</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"g"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwdArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gammaArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>gamma</color><color=#89DDFF>);</color>

			<color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>flapPub</color><color=#89DDFF>(</color><color=#EEFFFF>g</color><color=#89DDFF>,</color> <color=#EEFFFF>pwdArr</color><color=#89DDFF>,</color> <color=#EEFFFF>gammaArr</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testFlapButterflyFull</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initButterflyFull</color><color=#89DDFF>();</color>
	
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileFlapButterflyFull</color><color=#89DDFF>);</color>
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>int</color> <color=#EEFFFF>g</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"g"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwdArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gammaArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>gamma</color><color=#89DDFF>);</color>

			<color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>flapPub</color><color=#89DDFF>(</color><color=#EEFFFF>g</color><color=#89DDFF>,</color> <color=#EEFFFF>pwdArr</color><color=#89DDFF>,</color> <color=#EEFFFF>gammaArr</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testFlapDragonfly</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initDragonfly</color><color=#89DDFF>();</color>
		
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileFlapDragonfly</color><color=#89DDFF>);</color>
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initDragonfly</color><color=#89DDFF>();</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>int</color> <color=#EEFFFF>g</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"g"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwdArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gammaArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>gamma</color><color=#89DDFF>);</color>

			<color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>flapPub</color><color=#89DDFF>(</color><color=#EEFFFF>g</color><color=#89DDFF>,</color> <color=#EEFFFF>pwdArr</color><color=#89DDFF>,</color> <color=#EEFFFF>gammaArr</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testFlapDragonflyFull</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initDragonflyFull</color><color=#89DDFF>();</color>
	
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileFlapDragonflyFull</color><color=#89DDFF>);</color>
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>int</color> <color=#EEFFFF>g</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"g"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwdArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gammaArr</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>gamma</color><color=#89DDFF>);</color>

			<color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>flapPub</color><color=#89DDFF>(</color><color=#EEFFFF>g</color><color=#89DDFF>,</color> <color=#EEFFFF>pwdArr</color><color=#89DDFF>,</color> <color=#EEFFFF>gammaArr</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testTweakButterfly</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initButterfly</color><color=#89DDFF>();</color>
	
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>filetweakButterfly</color><color=#89DDFF>);</color>
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>int</color> <color=#EEFFFF>domain</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"d"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outLen</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outLen"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>sLen</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"sLen"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>aD</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>string2Bytes</color><color=#89DDFF>(</color><color=#EEFFFF>aD</color><color=#89DDFF>);</color>

			<color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>testCompTweak</color><color=#89DDFF>(</color><color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>getVID</color><color=#89DDFF>(),</color> <color=#EEFFFF>domain</color><color=#89DDFF>,</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>getLambda</color><color=#89DDFF>(),</color> <color=#EEFFFF>outLen</color><color=#89DDFF>,</color> <color=#EEFFFF>sLen</color><color=#89DDFF>,</color> <color=#EEFFFF>aData</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testTweakButterflyFull</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initButterflyFull</color><color=#89DDFF>();</color>
	
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>filetweakButterflyFull</color><color=#89DDFF>);</color>
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>int</color> <color=#EEFFFF>domain</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"d"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outLen</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outLen"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>sLen</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"sLen"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>aD</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>string2Bytes</color><color=#89DDFF>(</color><color=#EEFFFF>aD</color><color=#89DDFF>);</color>

			<color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>testCompTweak</color><color=#89DDFF>(</color><color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>getVID</color><color=#89DDFF>(),</color> <color=#EEFFFF>domain</color><color=#89DDFF>,</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>getLambda</color><color=#89DDFF>(),</color> <color=#EEFFFF>outLen</color><color=#89DDFF>,</color> <color=#EEFFFF>sLen</color><color=#89DDFF>,</color> <color=#EEFFFF>aData</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testTweakDragonfly</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initDragonfly</color><color=#89DDFF>();</color>
	
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>filetweakDragonfly</color><color=#89DDFF>);</color>
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>int</color> <color=#EEFFFF>domain</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"d"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outLen</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outLen"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>sLen</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"sLen"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>aD</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>string2Bytes</color><color=#89DDFF>(</color><color=#EEFFFF>aD</color><color=#89DDFF>);</color>

			<color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>testCompTweak</color><color=#89DDFF>(</color><color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>getVID</color><color=#89DDFF>(),</color> <color=#EEFFFF>domain</color><color=#89DDFF>,</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>getLambda</color><color=#89DDFF>(),</color> <color=#EEFFFF>outLen</color><color=#89DDFF>,</color> <color=#EEFFFF>sLen</color><color=#89DDFF>,</color> <color=#EEFFFF>aData</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testTweakDragonflyFull</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initDragonflyFull</color><color=#89DDFF>();</color>
	
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>filetweakDragonflyFull</color><color=#89DDFF>);</color>
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>int</color> <color=#EEFFFF>domain</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"d"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outLen</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outLen"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>sLen</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"sLen"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>aD</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>string2Bytes</color><color=#89DDFF>(</color><color=#EEFFFF>aD</color><color=#89DDFF>);</color>

			<color=#EEFFFF>String</color> <color=#EEFFFF>res</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>testCompTweak</color><color=#89DDFF>(</color><color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>getVID</color><color=#89DDFF>(),</color> <color=#EEFFFF>domain</color><color=#89DDFF>,</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>getLambda</color><color=#89DDFF>(),</color> <color=#EEFFFF>outLen</color><color=#89DDFF>,</color> <color=#EEFFFF>sLen</color><color=#89DDFF>,</color> <color=#EEFFFF>aData</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>res</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>output</color><color=#89DDFF>).</color><color=#BB80B3>toLowerCase</color><color=#89DDFF>()));</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testHInit</color><color=#89DDFF>(){</color>
		
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>defaultInstance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>defaultInstance</color><color=#89DDFF>.</color><color=#BB80B3>initDragonflyFull</color><color=#89DDFF>();</color>
		
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileHInit</color><color=#89DDFF>);</color>
		
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color>  <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

			<color=#EEFFFF>String</color> <color=#EEFFFF>x</color> 	  <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"x"</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>xArray</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>x</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>out</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getJSONArray</color><color=#89DDFF>(</color><color=#C3E88D>"v"</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>v0</color> <color=#89DDFF>=</color> <color=#EEFFFF>out</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#F78C6C>0</color><color=#89DDFF>);</color>
			<color=#EEFFFF>String</color> <color=#EEFFFF>v1</color> <color=#89DDFF>=</color> <color=#EEFFFF>out</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#F78C6C>1</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>result</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>testHInit</color><color=#89DDFF>(</color><color=#EEFFFF>xArray</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>String</color> <color=#EEFFFF>v</color> <color=#89DDFF>=</color> <color=#EEFFFF>v0</color><color=#89DDFF>+</color><color=#EEFFFF>v1</color><color=#89DDFF>;</color>
			
			
			<color=#EEFFFF>assertTrue</color><color=#89DDFF>(</color><color=#EEFFFF>v</color><color=#89DDFF>.</color><color=#BB80B3>equals</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>bytes2hex</color><color=#89DDFF>(</color><color=#EEFFFF>result</color><color=#89DDFF>)));</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testProofOfWorkServerSaltButterflyReduced</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>instance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>instance</color><color=#89DDFF>.</color><color=#BB80B3>initButterfly</color><color=#89DDFF>();</color>
		
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
		
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileproofOfWorkServerSaltButterflyReduced</color><color=#89DDFF>);</color>
		
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color>  <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>));</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outLen</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outLen"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>p</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"p"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>mode</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"mode"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwdExp</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>saltExp</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aDataExp</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gammaExp</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>));</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outLenExp</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outLen"</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>outHashExp</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"outHash"</color><color=#89DDFF>));</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>pExp</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"p"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>modeExp</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"mode"</color><color=#89DDFF>);</color>
			
			
			<color=#EEFFFF>POWstruct</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>proofOfWorkServer</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>,</color> <color=#EEFFFF>salt</color><color=#89DDFF>,</color> <color=#EEFFFF>aData</color><color=#89DDFF>,</color> <color=#EEFFFF>outLen</color><color=#89DDFF>,</color> <color=#EEFFFF>gamma</color><color=#89DDFF>,</color> <color=#EEFFFF>p</color><color=#89DDFF>,</color> <color=#EEFFFF>mode</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertArrayEquals</color><color=#89DDFF>(</color><color=#EEFFFF>pwdExp</color><color=#89DDFF>,</color> <color=#EEFFFF>output</color><color=#89DDFF>.</color><color=#BB80B3>pwd</color><color=#89DDFF>);</color>
			<color=#EEFFFF>assertArrayEquals</color><color=#89DDFF>(</color><color=#EEFFFF>saltExp</color><color=#89DDFF>,</color> <color=#EEFFFF>output</color><color=#89DDFF>.</color><color=#BB80B3>salt</color><color=#89DDFF>);</color>
			<color=#EEFFFF>assertArrayEquals</color><color=#89DDFF>(</color><color=#EEFFFF>aDataExp</color><color=#89DDFF>,</color> <color=#EEFFFF>output</color><color=#89DDFF>.</color><color=#BB80B3>aData</color><color=#89DDFF>);</color>
			<color=#EEFFFF>assertArrayEquals</color><color=#89DDFF>(</color><color=#EEFFFF>gammaExp</color><color=#89DDFF>,</color> <color=#EEFFFF>output</color><color=#89DDFF>.</color><color=#BB80B3>gamma</color><color=#89DDFF>);</color>
			<color=#EEFFFF>assertArrayEquals</color><color=#89DDFF>(</color><color=#EEFFFF>outHashExp</color><color=#89DDFF>,</color> <color=#EEFFFF>output</color><color=#89DDFF>.</color><color=#BB80B3>rHash</color><color=#89DDFF>);</color>
			<color=#EEFFFF>assertEquals</color><color=#89DDFF>(</color><color=#EEFFFF>outLenExp</color><color=#89DDFF>,</color> <color=#EEFFFF>output</color><color=#89DDFF>.</color><color=#BB80B3>outLen</color><color=#89DDFF>);</color>
			<color=#EEFFFF>assertEquals</color><color=#89DDFF>(</color><color=#EEFFFF>pExp</color><color=#89DDFF>,</color> <color=#EEFFFF>output</color><color=#89DDFF>.</color><color=#BB80B3>p</color><color=#89DDFF>);</color>
			<color=#EEFFFF>assertEquals</color><color=#89DDFF>(</color><color=#EEFFFF>modeExp</color><color=#89DDFF>,</color> <color=#EEFFFF>output</color><color=#89DDFF>.</color><color=#BB80B3>mode</color><color=#89DDFF>);</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>

	
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testProofOfWorkServerPwdButterflyReduced</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>instance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>instance</color><color=#89DDFF>.</color><color=#BB80B3>initButterfly</color><color=#89DDFF>();</color>
		
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
		
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileproofOfWorkServerPwdButterflyReduced</color><color=#89DDFF>);</color>
		
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color>  <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>));</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outLen</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outLen"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>p</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"p"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>mode</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"mode"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwdExp</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>saltExp</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aDataExp</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gammaExp</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>));</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outLenExp</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outLen"</color><color=#89DDFF>);</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>outHashExp</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"outHash"</color><color=#89DDFF>));</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>pExp</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"p"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>modeExp</color> <color=#89DDFF>=</color> <color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"mode"</color><color=#89DDFF>);</color>
			
			
			<color=#EEFFFF>POWstruct</color> <color=#EEFFFF>output</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>proofOfWorkServer</color><color=#89DDFF>(</color><color=#EEFFFF>pwd</color><color=#89DDFF>,</color> <color=#EEFFFF>salt</color><color=#89DDFF>,</color> <color=#EEFFFF>aData</color><color=#89DDFF>,</color> <color=#EEFFFF>outLen</color><color=#89DDFF>,</color> <color=#EEFFFF>gamma</color><color=#89DDFF>,</color> <color=#EEFFFF>p</color><color=#89DDFF>,</color> <color=#EEFFFF>mode</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertArrayEquals</color><color=#89DDFF>(</color><color=#EEFFFF>pwdExp</color><color=#89DDFF>,</color> <color=#EEFFFF>output</color><color=#89DDFF>.</color><color=#BB80B3>pwd</color><color=#89DDFF>);</color>
			<color=#EEFFFF>assertArrayEquals</color><color=#89DDFF>(</color><color=#EEFFFF>saltExp</color><color=#89DDFF>,</color> <color=#EEFFFF>output</color><color=#89DDFF>.</color><color=#BB80B3>salt</color><color=#89DDFF>);</color>
			<color=#EEFFFF>assertArrayEquals</color><color=#89DDFF>(</color><color=#EEFFFF>aDataExp</color><color=#89DDFF>,</color> <color=#EEFFFF>output</color><color=#89DDFF>.</color><color=#BB80B3>aData</color><color=#89DDFF>);</color>
			<color=#EEFFFF>assertArrayEquals</color><color=#89DDFF>(</color><color=#EEFFFF>gammaExp</color><color=#89DDFF>,</color> <color=#EEFFFF>output</color><color=#89DDFF>.</color><color=#BB80B3>gamma</color><color=#89DDFF>);</color>
			<color=#EEFFFF>assertArrayEquals</color><color=#89DDFF>(</color><color=#EEFFFF>outHashExp</color><color=#89DDFF>,</color> <color=#EEFFFF>output</color><color=#89DDFF>.</color><color=#BB80B3>rHash</color><color=#89DDFF>);</color>
			<color=#EEFFFF>assertEquals</color><color=#89DDFF>(</color><color=#EEFFFF>outLenExp</color><color=#89DDFF>,</color> <color=#EEFFFF>output</color><color=#89DDFF>.</color><color=#BB80B3>outLen</color><color=#89DDFF>);</color>
			<color=#EEFFFF>assertEquals</color><color=#89DDFF>(</color><color=#EEFFFF>pExp</color><color=#89DDFF>,</color> <color=#EEFFFF>output</color><color=#89DDFF>.</color><color=#BB80B3>p</color><color=#89DDFF>);</color>
			<color=#EEFFFF>assertEquals</color><color=#89DDFF>(</color><color=#EEFFFF>modeExp</color><color=#89DDFF>,</color> <color=#EEFFFF>output</color><color=#89DDFF>.</color><color=#BB80B3>mode</color><color=#89DDFF>);</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testProofOfWorkClientPwdButterflyReduced</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>instance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>instance</color><color=#89DDFF>.</color><color=#BB80B3>initButterfly</color><color=#89DDFF>();</color>
		
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
		
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileproofOfWorkClientPwdButterflyReduced</color><color=#89DDFF>);</color>
		
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color>  <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>hash</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"hash"</color><color=#89DDFF>));</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outLen</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outLen"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>p</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"p"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>mode</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"mode"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>resExp</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>));</color>
			
			<color=#EEFFFF>POWstruct</color> <color=#EEFFFF>input</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>new</color> <color=#82AAFF>POWstruct</color><color=#89DDFF>();</color>
			<color=#EEFFFF>input</color><color=#89DDFF>.</color><color=#BB80B3>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>pwd</color><color=#89DDFF>;</color>
			<color=#EEFFFF>input</color><color=#89DDFF>.</color><color=#BB80B3>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>salt</color><color=#89DDFF>;</color>
			<color=#EEFFFF>input</color><color=#89DDFF>.</color><color=#BB80B3>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>aData</color><color=#89DDFF>;</color>
			<color=#EEFFFF>input</color><color=#89DDFF>.</color><color=#BB80B3>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>gamma</color><color=#89DDFF>;</color>
			<color=#EEFFFF>input</color><color=#89DDFF>.</color><color=#BB80B3>outLen</color> <color=#89DDFF>=</color> <color=#EEFFFF>outLen</color><color=#89DDFF>;</color>
			<color=#EEFFFF>input</color><color=#89DDFF>.</color><color=#BB80B3>p</color> <color=#89DDFF>=</color> <color=#EEFFFF>p</color><color=#89DDFF>;</color>
			<color=#EEFFFF>input</color><color=#89DDFF>.</color><color=#BB80B3>mode</color> <color=#89DDFF>=</color> <color=#EEFFFF>mode</color><color=#89DDFF>;</color>
			<color=#EEFFFF>input</color><color=#89DDFF>.</color><color=#BB80B3>rHash</color> <color=#89DDFF>=</color> <color=#EEFFFF>hash</color><color=#89DDFF>;</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>actuals</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>proofOfWorkClient</color><color=#89DDFF>(</color><color=#EEFFFF>input</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertArrayEquals</color><color=#89DDFF>(</color><color=#EEFFFF>resExp</color><color=#89DDFF>,</color> <color=#EEFFFF>actuals</color><color=#89DDFF>);</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
	<color=#82AAFF>@Test</color>
	<color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>testProofOfWorkClientSaltButterflyReduced</color><color=#89DDFF>(){</color>
		<color=#EEFFFF>DefaultInstances</color> <color=#EEFFFF>instance</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>DefaultInstances</color><color=#89DDFF>();</color>
		<color=#EEFFFF>Catena</color> <color=#EEFFFF>c</color> <color=#89DDFF>=</color> <color=#EEFFFF>instance</color><color=#89DDFF>.</color><color=#BB80B3>initButterfly</color><color=#89DDFF>();</color>
		
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGHigh</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
		<color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>setGLow</color><color=#89DDFF>(</color><color=#F78C6C>9</color><color=#89DDFF>);</color>
		
		<color=#EEFFFF>JSONArray</color> <color=#EEFFFF>jsonObj</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>jsonParserArr</color><color=#89DDFF>(</color><color=#EEFFFF>fileproofOfWorkClientSaltButterflyReduced</color><color=#89DDFF>);</color>
		
		<color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>0</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color><color=#89DDFF><</color><color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>();</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color> <color=#89DDFF>){</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>o</color> <color=#89DDFF>=</color> <color=#89DDFF>(</color><color=#EEFFFF>JSONObject</color><color=#89DDFF>)</color> <color=#EEFFFF>jsonObj</color><color=#89DDFF>.</color><color=#BB80B3>get</color><color=#89DDFF>(</color><color=#EEFFFF>i</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>inputs</color>  <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"inputs"</color><color=#89DDFF>);</color>
			<color=#EEFFFF>JSONObject</color> <color=#EEFFFF>outputs</color> <color=#89DDFF>=</color> <color=#EEFFFF>o</color><color=#89DDFF>.</color><color=#BB80B3>getJSONObject</color><color=#89DDFF>(</color><color=#C3E88D>"outputs"</color><color=#89DDFF>);</color>

			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"pwd"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"salt"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"aData"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"gamma"</color><color=#89DDFF>));</color>
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>hash</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"hash"</color><color=#89DDFF>));</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>outLen</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"outLen"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>p</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"p"</color><color=#89DDFF>);</color>
			<color=#BB80B3>int</color> <color=#EEFFFF>mode</color> <color=#89DDFF>=</color> <color=#EEFFFF>inputs</color><color=#89DDFF>.</color><color=#BB80B3>getInt</color><color=#89DDFF>(</color><color=#C3E88D>"mode"</color><color=#89DDFF>);</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>resExp</color> <color=#89DDFF>=</color> <color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>hex2bytes</color><color=#89DDFF>(</color><color=#EEFFFF>outputs</color><color=#89DDFF>.</color><color=#BB80B3>getString</color><color=#89DDFF>(</color><color=#C3E88D>"res"</color><color=#89DDFF>));</color>
			
			<color=#EEFFFF>POWstruct</color> <color=#EEFFFF>input</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>new</color> <color=#82AAFF>POWstruct</color><color=#89DDFF>();</color>
			<color=#EEFFFF>input</color><color=#89DDFF>.</color><color=#BB80B3>pwd</color> <color=#89DDFF>=</color> <color=#EEFFFF>pwd</color><color=#89DDFF>;</color>
			<color=#EEFFFF>input</color><color=#89DDFF>.</color><color=#BB80B3>salt</color> <color=#89DDFF>=</color> <color=#EEFFFF>salt</color><color=#89DDFF>;</color>
			<color=#EEFFFF>input</color><color=#89DDFF>.</color><color=#BB80B3>aData</color> <color=#89DDFF>=</color> <color=#EEFFFF>aData</color><color=#89DDFF>;</color>
			<color=#EEFFFF>input</color><color=#89DDFF>.</color><color=#BB80B3>gamma</color> <color=#89DDFF>=</color> <color=#EEFFFF>gamma</color><color=#89DDFF>;</color>
			<color=#EEFFFF>input</color><color=#89DDFF>.</color><color=#BB80B3>outLen</color> <color=#89DDFF>=</color> <color=#EEFFFF>outLen</color><color=#89DDFF>;</color>
			<color=#EEFFFF>input</color><color=#89DDFF>.</color><color=#BB80B3>p</color> <color=#89DDFF>=</color> <color=#EEFFFF>p</color><color=#89DDFF>;</color>
			<color=#EEFFFF>input</color><color=#89DDFF>.</color><color=#BB80B3>mode</color> <color=#89DDFF>=</color> <color=#EEFFFF>mode</color><color=#89DDFF>;</color>
			<color=#EEFFFF>input</color><color=#89DDFF>.</color><color=#BB80B3>rHash</color> <color=#89DDFF>=</color> <color=#EEFFFF>hash</color><color=#89DDFF>;</color>
			
			<color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>actuals</color> <color=#89DDFF>=</color> <color=#EEFFFF>c</color><color=#89DDFF>.</color><color=#BB80B3>proofOfWorkClient</color><color=#89DDFF>(</color><color=#EEFFFF>input</color><color=#89DDFF>);</color>
			
			<color=#EEFFFF>assertArrayEquals</color><color=#89DDFF>(</color><color=#EEFFFF>resExp</color><color=#89DDFF>,</color> <color=#EEFFFF>actuals</color><color=#89DDFF>);</color>
		<color=#89DDFF>}</color>
	<color=#89DDFF>}</color>
	
<color=#89DDFF>}</color>