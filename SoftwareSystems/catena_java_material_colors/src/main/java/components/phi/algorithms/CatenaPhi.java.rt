<color=#89DDFF>package</color> <color=#FFCB6B>main.java.components.phi.algorithms</color><color=#89DDFF>;</color>

<color=#89DDFF>import</color> <color=#FFCB6B>main.java.Helper</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>main.java.components.hash.HashInterface</color><color=#89DDFF>;</color>
<color=#89DDFF>import</color> <color=#FFCB6B>main.java.components.phi.PhiInterface</color><color=#89DDFF>;</color>

<color=#BB80B3>public</color> <color=#BB80B3>class</color> <color=#FFCB6B>CatenaPhi</color> <color=#BB80B3>implements</color> <color=#EEFFFF>PhiInterface</color> <color=#89DDFF>{</color>

    <color=#EEFFFF>Helper</color> <color=#EEFFFF>helper</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#EEFFFF>Helper</color><color=#89DDFF>();</color>
    
    <color=#EEFFFF>IdxStateInterface</color> <color=#EEFFFF>_idx</color><color=#89DDFF>;</color>
    <color=#EEFFFF>HashInterface</color> <color=#EEFFFF>_h</color><color=#89DDFF>;</color>
    <color=#EEFFFF>HashInterface</color> <color=#EEFFFF>_hPrime</color><color=#89DDFF>;</color>
    
    <color=#BB80B3>public</color> <color=#82AAFF>CatenaPhi</color><color=#89DDFF>(</color><color=#EEFFFF>IdxStateInterface</color> <color=#EEFFFF>idx</color><color=#89DDFF>){</color>
        <color=#EEFFFF>_idx</color> <color=#89DDFF>=</color> <color=#EEFFFF>idx</color><color=#89DDFF>;</color> 
    <color=#89DDFF>}</color>
    
    <color=#BB80B3>public</color> <color=#BB80B3>byte</color><color=#89DDFF>[][]</color> <color=#82AAFF>phi</color><color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>garlic</color><color=#89DDFF>,</color> <color=#BB80B3>byte</color><color=#89DDFF>[][]</color> <color=#EEFFFF>b</color><color=#89DDFF>,</color> <color=#BB80B3>byte</color><color=#89DDFF>[]</color> <color=#EEFFFF>m</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#BB80B3>int</color> <color=#EEFFFF>j</color> <color=#89DDFF>=</color> <color=#EEFFFF>_idx</color><color=#89DDFF>.</color><color=#BB80B3>getLsbIndex</color><color=#89DDFF>(</color><color=#EEFFFF>m</color><color=#89DDFF>,</color> <color=#EEFFFF>garlic</color><color=#89DDFF>);</color>
        <color=#BB80B3>byte</color><color=#89DDFF>[][]</color> <color=#EEFFFF>tmp</color> <color=#89DDFF>=</color> <color=#BB80B3>new</color> <color=#BB80B3>byte</color><color=#89DDFF>[</color><color=#EEFFFF>b</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>][</color><color=#EEFFFF>_h</color><color=#89DDFF>.</color><color=#BB80B3>getOutputSize</color><color=#89DDFF>()</color><color=#89DDFF>]</color><color=#89DDFF>;</color>
        
        <color=#EEFFFF>System</color><color=#89DDFF>.</color><color=#BB80B3>arraycopy</color><color=#89DDFF>(</color><color=#EEFFFF>b</color><color=#89DDFF>,</color> <color=#F78C6C>0</color><color=#89DDFF>,</color> <color=#EEFFFF>tmp</color><color=#89DDFF>,</color> <color=#F78C6C>0</color><color=#89DDFF>,</color> <color=#EEFFFF>b</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>);</color>
        
        
        
        <color=#EEFFFF>_hPrime</color><color=#89DDFF>.</color><color=#BB80B3>update</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>concateByteArrays</color><color=#89DDFF>(</color><color=#EEFFFF>b</color><color=#89DDFF>[</color><color=#EEFFFF>b</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>-</color><color=#F78C6C>1</color><color=#89DDFF>]</color><color=#89DDFF>,</color> <color=#EEFFFF>b</color><color=#89DDFF>[</color><color=#EEFFFF>j</color><color=#89DDFF>]</color><color=#89DDFF>));</color>
        <color=#EEFFFF>tmp</color><color=#89DDFF>[</color><color=#F78C6C>0</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>_hPrime</color><color=#89DDFF>.</color><color=#BB80B3>doFinal</color><color=#89DDFF>();</color>
        <color=#EEFFFF>_hPrime</color><color=#89DDFF>.</color><color=#BB80B3>reset</color><color=#89DDFF>();</color>
        
        <color=#BB80B3>for</color> <color=#89DDFF>(</color><color=#BB80B3>int</color> <color=#EEFFFF>i</color> <color=#89DDFF>=</color> <color=#F78C6C>1</color><color=#89DDFF>;</color> <color=#EEFFFF>i</color> <color=#89DDFF><</color> <color=#EEFFFF>b</color><color=#89DDFF>.</color><color=#BB80B3>length</color><color=#89DDFF>;</color> <color=#89DDFF>++</color><color=#EEFFFF>i</color><color=#89DDFF>){</color>
            <color=#EEFFFF>j</color> <color=#89DDFF>=</color> <color=#EEFFFF>_idx</color><color=#89DDFF>.</color><color=#BB80B3>getLsbIndex</color><color=#89DDFF>(</color><color=#EEFFFF>tmp</color><color=#89DDFF>[</color><color=#EEFFFF>i</color><color=#89DDFF>-</color><color=#F78C6C>1</color><color=#89DDFF>]</color><color=#89DDFF>,</color> <color=#EEFFFF>garlic</color><color=#89DDFF>);</color>
            
            <color=#EEFFFF>_hPrime</color><color=#89DDFF>.</color><color=#BB80B3>update</color><color=#89DDFF>(</color><color=#EEFFFF>helper</color><color=#89DDFF>.</color><color=#BB80B3>concateByteArrays</color><color=#89DDFF>(</color><color=#EEFFFF>tmp</color><color=#89DDFF>[</color><color=#EEFFFF>i</color><color=#89DDFF>-</color><color=#F78C6C>1</color><color=#89DDFF>]</color><color=#89DDFF>,</color> <color=#EEFFFF>tmp</color><color=#89DDFF>[</color><color=#EEFFFF>j</color><color=#89DDFF>]</color><color=#89DDFF>));</color>
            <color=#EEFFFF>tmp</color><color=#89DDFF>[</color><color=#EEFFFF>i</color><color=#89DDFF>]</color> <color=#89DDFF>=</color> <color=#EEFFFF>_hPrime</color><color=#89DDFF>.</color><color=#BB80B3>doFinal</color><color=#89DDFF>();</color>
            <color=#EEFFFF>_hPrime</color><color=#89DDFF>.</color><color=#BB80B3>reset</color><color=#89DDFF>();</color> 
        <color=#89DDFF>}</color>
        
        <color=#BB80B3>return</color> <color=#EEFFFF>tmp</color><color=#89DDFF>;</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>setH</color><color=#89DDFF>(</color><color=#EEFFFF>HashInterface</color> <color=#EEFFFF>h</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>_h</color> <color=#89DDFF>=</color> <color=#EEFFFF>h</color><color=#89DDFF>;</color>
    <color=#89DDFF>}</color>

    <color=#BB80B3>public</color> <color=#BB80B3>void</color> <color=#82AAFF>setHPrime</color><color=#89DDFF>(</color><color=#EEFFFF>HashInterface</color> <color=#EEFFFF>hPrime</color><color=#89DDFF>)</color> <color=#89DDFF>{</color>
        <color=#EEFFFF>_hPrime</color> <color=#89DDFF>=</color> <color=#EEFFFF>hPrime</color><color=#89DDFF>;</color>
    <color=#89DDFF>}</color>

<color=#89DDFF>}</color>