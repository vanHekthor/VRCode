<color=#7401DF>import</color> java.util.ArrayList;
<color=#7401DF>import</color> java.util.Arrays;
<color=#7401DF>import</color> java.util.List;

<color=#8000FF>class</color> <color=#045FB4>Main</color> {

    <color=#8000FF>public</color> <color=#8000FF>static</color> <color=#8000FF>void</color> main(String[] args) {

        <color=#8000FF>boolean</color> CALCULATE = true;
        <color=#8000FF>boolean</color> GENERATE_NUM_LIST = true;

        <color=#8000FF>boolean</color> BINARY_LIST = false;
        <color=#8000FF>boolean</color> INT_LIST = true;

        <color=#8000FF>boolean</color> SORT_LIST = true;
        <color=#8000FF>boolean</color> MERGE_SORT = false;
        <color=#8000FF>boolean</color> QUICK_SORT = false;
        <color=#8000FF>boolean</color> BUBBLE_SORT = true;
        
        <color=#8000FF>boolean</color> PRINT_NUM_LIST = true;

        <color=#8000FF>boolean</color> OPTION_A = false;
        <color=#8000FF>boolean</color> OPTION_B = true;
        <color=#8000FF>boolean</color> OPTION_C = false;
        <color=#8000FF>boolean</color> OPTION_D = true;

        Calc c = <color=#8000FF>new</color> Calc(15,5);

        <color=#8000FF>if</color> (CALCULATE) {
            <color=#8000FF>int</color> sum = 0;
            <color=#8000FF>if</color> (OPTION_A) {
                 sum = c.<color=#045FB4>add</color>(); 
            }
            
            <color=#8000FF>int</color> diff = 0;
            <color=#8000FF>if</color> (OPTION_B) {
                 diff = c.<color=#045FB4>sub</color>(); 
            }

            <color=#8000FF>int</color> prod = 0;
            <color=#8000FF>if</color> (OPTION_C) {
                 prod = c.<color=#045FB4>mul</color>();
            }

            <color=#8000FF>float</color> quot = 0;
            <color=#8000FF>if</color> (OPTION_D) {
                quot = c.<color=#045FB4>div</color>();
            }

            System.<color=#045FB4>out</color>.<color=#045FB4>println</color>(sum);
            System.<color=#045FB4>out</color>.<color=#045FB4>println</color>(diff);
            System.<color=#045FB4>out</color>.<color=#045FB4>println</color>(prod);
            System.<color=#045FB4>out</color>.<color=#045FB4>println</color>(quot);
        }

        <color=#8000FF>if</color> (GENERATE_NUM_LIST) {
            RandomNumberGenerator gen = <color=#8000FF>new</color> RandomNumberGenerator();

            List<Integer> numList = <color=#8000FF>new</color> ArrayList<Integer>();
            
            <color=#8000FF>if</color> (BINARY_LIST)
                numList = gen.<color=#045FB4>generate01List</color>(52);
            <color=#8000FF>else</color> <color=#8000FF>if</color> (INT_LIST)
                numList = gen.<color=#045FB4>generateIntegerList</color>(52, 5, 15);

            <color=#8000FF>if</color> (SORT_LIST) {
                ListSorter listSorter = <color=#8000FF>new</color> ListSorter();
                
                <color=#8000FF>if</color> (MERGE_SORT)
                    numList = listSorter.<color=#045FB4>mergeSort</color>(numList);
                <color=#8000FF>if</color> (QUICK_SORT)
                    numList = listSorter.<color=#045FB4>quickSort</color>(numList);
                <color=#8000FF>if</color> (BUBBLE_SORT)
                    numList = listSorter.<color=#045FB4>bubbleSort</color>(numList);
            }    
        
            <color=#8000FF>if</color> (PRINT_NUM_LIST) {
                System.<color=#045FB4>out</color>.<color=#045FB4>println</color>(Arrays.<color=#045FB4>toString</color>(numList.<color=#045FB4>toArray</color>()));
            }
        }
    }

}